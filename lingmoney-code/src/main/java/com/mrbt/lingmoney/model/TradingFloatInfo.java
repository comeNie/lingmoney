package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class TradingFloatInfo implements Serializable {
    /**
     * 主键
     * 表字段 : trading_float_info.id
     */
    private Integer id;

    /**
     * 交易表id
     * 表字段 : trading_float_info.t_id
     */
    private Integer tId;

    /**
     * 买入的净值
     * 表字段 : trading_float_info.in_net_value
     */
    private BigDecimal inNetValue;

    /**
     * 买入净值的时间
     * 表字段 : trading_float_info.in_net_dt
     */
    private Date inNetDt;

    /**
     * 买入的份数
     * 表字段 : trading_float_info.num
     */
    private BigDecimal num;

    /**
     * 卖出净值的时间
     * 表字段 : trading_float_info.out_net_dt
     */
    private Date outNetDt;

    /**
     * 卖出的净值
     * 表字段 : trading_float_info.out_net_value
     */
    private BigDecimal outNetValue;

    /**
     * 利润
     * 表字段 : trading_float_info.profit
     */
    private BigDecimal profit;

    /**
     * 佣金
     * 表字段 : trading_float_info.cost_value
     */
    private BigDecimal costValue;

    /**
     * 结息日
     * 表字段 : trading_float_info.expiry_dt
     */
    private Date expiryDt;

    /**
     * 
     * 表字段 : trading_float_info.biz_code
     */
    private String bizCode;

    /**
     * 理财金额
     * 表字段 : trading_float_info.financial_money
     */
    private BigDecimal financialMoney;

    /**
     * 状态，0:买入，1支付成功，2卖出，3卖出成功, 4 资金冻结，5支付失败，6退回
     * 表字段 : trading_float_info.status
     */
    private Integer status;

    /**
     * 实际的计算日期
     * 表字段 : trading_float_info.value_dt
     */
    private Date valueDt;

    /**
     * 卖出确认，0是默认未确认，1是确认
     * 表字段 : trading_float_info.sell_submit
     */
    private Integer sellSubmit;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trading_float_info
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:trading_float_info.id
     *
     * @return trading_float_info.id, 主键
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 主键 字段:trading_float_info.id
     *
     * @param id the value for trading_float_info.id, 主键
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 交易表id 字段:trading_float_info.t_id
     *
     * @return trading_float_info.t_id, 交易表id
     */
    public Integer gettId() {
        return tId;
    }

    /**
     * 设置 交易表id 字段:trading_float_info.t_id
     *
     * @param tId the value for trading_float_info.t_id, 交易表id
     */
    public void settId(Integer tId) {
        this.tId = tId;
    }

    /**
     * 获取 买入的净值 字段:trading_float_info.in_net_value
     *
     * @return trading_float_info.in_net_value, 买入的净值
     */
    public BigDecimal getInNetValue() {
        return inNetValue;
    }

    /**
     * 设置 买入的净值 字段:trading_float_info.in_net_value
     *
     * @param inNetValue the value for trading_float_info.in_net_value, 买入的净值
     */
    public void setInNetValue(BigDecimal inNetValue) {
        this.inNetValue = inNetValue;
    }

    /**
     * 获取 买入净值的时间 字段:trading_float_info.in_net_dt
     *
     * @return trading_float_info.in_net_dt, 买入净值的时间
     */
    public Date getInNetDt() {
        return inNetDt;
    }

    /**
     * 设置 买入净值的时间 字段:trading_float_info.in_net_dt
     *
     * @param inNetDt the value for trading_float_info.in_net_dt, 买入净值的时间
     */
    public void setInNetDt(Date inNetDt) {
        this.inNetDt = inNetDt;
    }

    /**
     * 获取 买入的份数 字段:trading_float_info.num
     *
     * @return trading_float_info.num, 买入的份数
     */
    public BigDecimal getNum() {
        return num;
    }

    /**
     * 设置 买入的份数 字段:trading_float_info.num
     *
     * @param num the value for trading_float_info.num, 买入的份数
     */
    public void setNum(BigDecimal num) {
        this.num = num;
    }

    /**
     * 获取 卖出净值的时间 字段:trading_float_info.out_net_dt
     *
     * @return trading_float_info.out_net_dt, 卖出净值的时间
     */
    public Date getOutNetDt() {
        return outNetDt;
    }

    /**
     * 设置 卖出净值的时间 字段:trading_float_info.out_net_dt
     *
     * @param outNetDt the value for trading_float_info.out_net_dt, 卖出净值的时间
     */
    public void setOutNetDt(Date outNetDt) {
        this.outNetDt = outNetDt;
    }

    /**
     * 获取 卖出的净值 字段:trading_float_info.out_net_value
     *
     * @return trading_float_info.out_net_value, 卖出的净值
     */
    public BigDecimal getOutNetValue() {
        return outNetValue;
    }

    /**
     * 设置 卖出的净值 字段:trading_float_info.out_net_value
     *
     * @param outNetValue the value for trading_float_info.out_net_value, 卖出的净值
     */
    public void setOutNetValue(BigDecimal outNetValue) {
        this.outNetValue = outNetValue;
    }

    /**
     * 获取 利润 字段:trading_float_info.profit
     *
     * @return trading_float_info.profit, 利润
     */
    public BigDecimal getProfit() {
        return profit;
    }

    /**
     * 设置 利润 字段:trading_float_info.profit
     *
     * @param profit the value for trading_float_info.profit, 利润
     */
    public void setProfit(BigDecimal profit) {
        this.profit = profit;
    }

    /**
     * 获取 佣金 字段:trading_float_info.cost_value
     *
     * @return trading_float_info.cost_value, 佣金
     */
    public BigDecimal getCostValue() {
        return costValue;
    }

    /**
     * 设置 佣金 字段:trading_float_info.cost_value
     *
     * @param costValue the value for trading_float_info.cost_value, 佣金
     */
    public void setCostValue(BigDecimal costValue) {
        this.costValue = costValue;
    }

    /**
     * 获取 结息日 字段:trading_float_info.expiry_dt
     *
     * @return trading_float_info.expiry_dt, 结息日
     */
    public Date getExpiryDt() {
        return expiryDt;
    }

    /**
     * 设置 结息日 字段:trading_float_info.expiry_dt
     *
     * @param expiryDt the value for trading_float_info.expiry_dt, 结息日
     */
    public void setExpiryDt(Date expiryDt) {
        this.expiryDt = expiryDt;
    }

    /**
     * 获取  字段:trading_float_info.biz_code
     *
     * @return trading_float_info.biz_code, 
     */
    public String getBizCode() {
        return bizCode;
    }

    /**
     * 设置  字段:trading_float_info.biz_code
     *
     * @param bizCode the value for trading_float_info.biz_code, 
     */
    public void setBizCode(String bizCode) {
        this.bizCode = bizCode == null ? null : bizCode.trim();
    }

    /**
     * 获取 理财金额 字段:trading_float_info.financial_money
     *
     * @return trading_float_info.financial_money, 理财金额
     */
    public BigDecimal getFinancialMoney() {
        return financialMoney;
    }

    /**
     * 设置 理财金额 字段:trading_float_info.financial_money
     *
     * @param financialMoney the value for trading_float_info.financial_money, 理财金额
     */
    public void setFinancialMoney(BigDecimal financialMoney) {
        this.financialMoney = financialMoney;
    }

    /**
     * 获取 状态，0:买入，1支付成功，2卖出，3卖出成功, 4 资金冻结，5支付失败，6退回 字段:trading_float_info.status
     *
     * @return trading_float_info.status, 状态，0:买入，1支付成功，2卖出，3卖出成功, 4 资金冻结，5支付失败，6退回
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态，0:买入，1支付成功，2卖出，3卖出成功, 4 资金冻结，5支付失败，6退回 字段:trading_float_info.status
     *
     * @param status the value for trading_float_info.status, 状态，0:买入，1支付成功，2卖出，3卖出成功, 4 资金冻结，5支付失败，6退回
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * 获取 实际的计算日期 字段:trading_float_info.value_dt
     *
     * @return trading_float_info.value_dt, 实际的计算日期
     */
    public Date getValueDt() {
        return valueDt;
    }

    /**
     * 设置 实际的计算日期 字段:trading_float_info.value_dt
     *
     * @param valueDt the value for trading_float_info.value_dt, 实际的计算日期
     */
    public void setValueDt(Date valueDt) {
        this.valueDt = valueDt;
    }

    /**
     * 获取 卖出确认，0是默认未确认，1是确认 字段:trading_float_info.sell_submit
     *
     * @return trading_float_info.sell_submit, 卖出确认，0是默认未确认，1是确认
     */
    public Integer getSellSubmit() {
        return sellSubmit;
    }

    /**
     * 设置 卖出确认，0是默认未确认，1是确认 字段:trading_float_info.sell_submit
     *
     * @param sellSubmit the value for trading_float_info.sell_submit, 卖出确认，0是默认未确认，1是确认
     */
    public void setSellSubmit(Integer sellSubmit) {
        this.sellSubmit = sellSubmit;
    }

    /**
     * ,trading_float_info
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", tId=").append(tId);
        sb.append(", inNetValue=").append(inNetValue);
        sb.append(", inNetDt=").append(inNetDt);
        sb.append(", num=").append(num);
        sb.append(", outNetDt=").append(outNetDt);
        sb.append(", outNetValue=").append(outNetValue);
        sb.append(", profit=").append(profit);
        sb.append(", costValue=").append(costValue);
        sb.append(", expiryDt=").append(expiryDt);
        sb.append(", bizCode=").append(bizCode);
        sb.append(", financialMoney=").append(financialMoney);
        sb.append(", status=").append(status);
        sb.append(", valueDt=").append(valueDt);
        sb.append(", sellSubmit=").append(sellSubmit);
        sb.append("]");
        return sb.toString();
    }
}