package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class TakeheartTransactionFlow implements Serializable {
    /**
     * 主键
     * 表字段 : takeheart_transaction_flow.id
     */
    private Integer id;

    /**
     * 
     * 表字段 : takeheart_transaction_flow.u_id
     */
    private String uId;

    /**
     * 产品id
     * 表字段 : takeheart_transaction_flow.p_id
     */
    private Integer pId;

    /**
     * 交易id
     * 表字段 : takeheart_transaction_flow.t_id
     */
    private Integer tId;

    /**
     * 交易金额
     * 表字段 : takeheart_transaction_flow.money
     */
    private BigDecimal money;

    /**
     * 交易类型：0买,1卖,2付息
     * 表字段 : takeheart_transaction_flow.type
     */
    private Integer type;

    /**
     * 状态：0失败,1成功,2待处理,3冻结状态
     * 表字段 : takeheart_transaction_flow.state
     */
    private Integer state;

    /**
     * 当前时间
     * 表字段 : takeheart_transaction_flow.operate_time
     */
    private Date operateTime;

    /**
     * 序列号
     * 表字段 : takeheart_transaction_flow.number
     */
    private String number;

    /**
     * 赎回类型：0普通赎回,1全部赎回
     * 表字段 : takeheart_transaction_flow.redeem_type
     */
    private Integer redeemType;

    /**
     * 利息
     * 表字段 : takeheart_transaction_flow.interest
     */
    private BigDecimal interest;

    /**
     * 
     * 表字段 : takeheart_transaction_flow.card_pan
     */
    private String cardPan;

    /**
     * 交易完成时间
     * 表字段 : takeheart_transaction_flow.pay_end_time
     */
    private Date payEndTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table takeheart_transaction_flow
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:takeheart_transaction_flow.id
     *
     * @return takeheart_transaction_flow.id, 主键
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 主键 字段:takeheart_transaction_flow.id
     *
     * @param id the value for takeheart_transaction_flow.id, 主键
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取  字段:takeheart_transaction_flow.u_id
     *
     * @return takeheart_transaction_flow.u_id, 
     */
    public String getuId() {
        return uId;
    }

    /**
     * 设置  字段:takeheart_transaction_flow.u_id
     *
     * @param uId the value for takeheart_transaction_flow.u_id, 
     */
    public void setuId(String uId) {
        this.uId = uId == null ? null : uId.trim();
    }

    /**
     * 获取 产品id 字段:takeheart_transaction_flow.p_id
     *
     * @return takeheart_transaction_flow.p_id, 产品id
     */
    public Integer getpId() {
        return pId;
    }

    /**
     * 设置 产品id 字段:takeheart_transaction_flow.p_id
     *
     * @param pId the value for takeheart_transaction_flow.p_id, 产品id
     */
    public void setpId(Integer pId) {
        this.pId = pId;
    }

    /**
     * 获取 交易id 字段:takeheart_transaction_flow.t_id
     *
     * @return takeheart_transaction_flow.t_id, 交易id
     */
    public Integer gettId() {
        return tId;
    }

    /**
     * 设置 交易id 字段:takeheart_transaction_flow.t_id
     *
     * @param tId the value for takeheart_transaction_flow.t_id, 交易id
     */
    public void settId(Integer tId) {
        this.tId = tId;
    }

    /**
     * 获取 交易金额 字段:takeheart_transaction_flow.money
     *
     * @return takeheart_transaction_flow.money, 交易金额
     */
    public BigDecimal getMoney() {
        return money;
    }

    /**
     * 设置 交易金额 字段:takeheart_transaction_flow.money
     *
     * @param money the value for takeheart_transaction_flow.money, 交易金额
     */
    public void setMoney(BigDecimal money) {
        this.money = money;
    }

    /**
     * 获取 交易类型：0买,1卖,2付息 字段:takeheart_transaction_flow.type
     *
     * @return takeheart_transaction_flow.type, 交易类型：0买,1卖,2付息
     */
    public Integer getType() {
        return type;
    }

    /**
     * 设置 交易类型：0买,1卖,2付息 字段:takeheart_transaction_flow.type
     *
     * @param type the value for takeheart_transaction_flow.type, 交易类型：0买,1卖,2付息
     */
    public void setType(Integer type) {
        this.type = type;
    }

    /**
     * 获取 状态：0失败,1成功,2待处理,3冻结状态 字段:takeheart_transaction_flow.state
     *
     * @return takeheart_transaction_flow.state, 状态：0失败,1成功,2待处理,3冻结状态
     */
    public Integer getState() {
        return state;
    }

    /**
     * 设置 状态：0失败,1成功,2待处理,3冻结状态 字段:takeheart_transaction_flow.state
     *
     * @param state the value for takeheart_transaction_flow.state, 状态：0失败,1成功,2待处理,3冻结状态
     */
    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * 获取 当前时间 字段:takeheart_transaction_flow.operate_time
     *
     * @return takeheart_transaction_flow.operate_time, 当前时间
     */
    public Date getOperateTime() {
        return operateTime;
    }

    /**
     * 设置 当前时间 字段:takeheart_transaction_flow.operate_time
     *
     * @param operateTime the value for takeheart_transaction_flow.operate_time, 当前时间
     */
    public void setOperateTime(Date operateTime) {
        this.operateTime = operateTime;
    }

    /**
     * 获取 序列号 字段:takeheart_transaction_flow.number
     *
     * @return takeheart_transaction_flow.number, 序列号
     */
    public String getNumber() {
        return number;
    }

    /**
     * 设置 序列号 字段:takeheart_transaction_flow.number
     *
     * @param number the value for takeheart_transaction_flow.number, 序列号
     */
    public void setNumber(String number) {
        this.number = number == null ? null : number.trim();
    }

    /**
     * 获取 赎回类型：0普通赎回,1全部赎回 字段:takeheart_transaction_flow.redeem_type
     *
     * @return takeheart_transaction_flow.redeem_type, 赎回类型：0普通赎回,1全部赎回
     */
    public Integer getRedeemType() {
        return redeemType;
    }

    /**
     * 设置 赎回类型：0普通赎回,1全部赎回 字段:takeheart_transaction_flow.redeem_type
     *
     * @param redeemType the value for takeheart_transaction_flow.redeem_type, 赎回类型：0普通赎回,1全部赎回
     */
    public void setRedeemType(Integer redeemType) {
        this.redeemType = redeemType;
    }

    /**
     * 获取 利息 字段:takeheart_transaction_flow.interest
     *
     * @return takeheart_transaction_flow.interest, 利息
     */
    public BigDecimal getInterest() {
        return interest;
    }

    /**
     * 设置 利息 字段:takeheart_transaction_flow.interest
     *
     * @param interest the value for takeheart_transaction_flow.interest, 利息
     */
    public void setInterest(BigDecimal interest) {
        this.interest = interest;
    }

    /**
     * 获取  字段:takeheart_transaction_flow.card_pan
     *
     * @return takeheart_transaction_flow.card_pan, 
     */
    public String getCardPan() {
        return cardPan;
    }

    /**
     * 设置  字段:takeheart_transaction_flow.card_pan
     *
     * @param cardPan the value for takeheart_transaction_flow.card_pan, 
     */
    public void setCardPan(String cardPan) {
        this.cardPan = cardPan == null ? null : cardPan.trim();
    }

    /**
     * 获取 交易完成时间 字段:takeheart_transaction_flow.pay_end_time
     *
     * @return takeheart_transaction_flow.pay_end_time, 交易完成时间
     */
    public Date getPayEndTime() {
        return payEndTime;
    }

    /**
     * 设置 交易完成时间 字段:takeheart_transaction_flow.pay_end_time
     *
     * @param payEndTime the value for takeheart_transaction_flow.pay_end_time, 交易完成时间
     */
    public void setPayEndTime(Date payEndTime) {
        this.payEndTime = payEndTime;
    }

    /**
     * ,takeheart_transaction_flow
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", uId=").append(uId);
        sb.append(", pId=").append(pId);
        sb.append(", tId=").append(tId);
        sb.append(", money=").append(money);
        sb.append(", type=").append(type);
        sb.append(", state=").append(state);
        sb.append(", operateTime=").append(operateTime);
        sb.append(", number=").append(number);
        sb.append(", redeemType=").append(redeemType);
        sb.append(", interest=").append(interest);
        sb.append(", cardPan=").append(cardPan);
        sb.append(", payEndTime=").append(payEndTime);
        sb.append("]");
        return sb.toString();
    }
}