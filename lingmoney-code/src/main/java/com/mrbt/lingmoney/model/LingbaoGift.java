package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class LingbaoGift implements Serializable {
    /**
     * 主键
     * 表字段 : lingbao_gift.id
     */
    private Integer id;

    /**
     * 名称
     * 表字段 : lingbao_gift.name
     */
    private String name;

    /**
     * 礼品代码：（type_id前补0）3位type_id+（id前补0）4位id
     * 表字段 : lingbao_gift.code
     */
    private String code;

    /**
     * 领宝礼品类型id
     * 表字段 : lingbao_gift.type_id
     */
    private Integer typeId;

    /**
     * 类型。0实物礼品 1虚拟礼品 2领宝
     * 表字段 : lingbao_gift.type
     */
    private Integer type;

    /**
     * 兑换所需积分(领宝个数)
     * 表字段 : lingbao_gift.integral
     */
    private Integer integral;

    /**
     * 特惠积分
     * 表字段 : lingbao_gift.preferential_integral
     */
    private Integer preferentialIntegral;

    /**
     * 入库数量（不可改）
     * 表字段 : lingbao_gift.has_store
     */
    private Integer hasStore;

    /**
     * 当前库存数量
     * 表字段 : lingbao_gift.store
     */
    private Integer store;

    /**
     * 库存预警。有库存上限且库存小于等于预警值，则提示。
     * 表字段 : lingbao_gift.warning_store
     */
    private Integer warningStore;

    /**
     * 礼品归属地（通用或地域限制）
     * 表字段 : lingbao_gift.attribution
     */
    private String attribution;

    /**
     * 成本价：领钱儿与商家签订的一种礼品的价格，属于内部价格
     * 表字段 : lingbao_gift.cost_price
     */
    private BigDecimal costPrice;

    /**
     * 市场价：公开给客户参考的价格
     * 表字段 : lingbao_gift.market_price
     */
    private BigDecimal marketPrice;

    /**
     * 礼品上下架：0下架，1上架
     * 表字段 : lingbao_gift.shelf_status
     */
    private Integer shelfStatus;

    /**
     * 是否最新上架：0否，1是
     * 表字段 : lingbao_gift.new_status
     */
    private Integer newStatus;

    /**
     * 是否推荐：0否，1是
     * 表字段 : lingbao_gift.recommend
     */
    private Integer recommend;

    /**
     * 已兑换数量
     * 表字段 : lingbao_gift.exchange_count
     */
    private Integer exchangeCount;

    /**
     * 限制单次兑换个数，默认不限制。
     * 表字段 : lingbao_gift.exchange_number
     */
    private Integer exchangeNumber;

    /**
     * 礼品领取方式：0寄送，1自取，2无需领取
     * 表字段 : lingbao_gift.receive_way
     */
    private Integer receiveWay;

    /**
     * 入库人姓名
     * 表字段 : lingbao_gift.instore_name
     */
    private String instoreName;

    /**
     * 入库时间
     * 表字段 : lingbao_gift.instore_time
     */
    private Date instoreTime;

    /**
     * 操作人姓名
     * 表字段 : lingbao_gift.operate_name
     */
    private String operateName;

    /**
     * 操作时间
     * 表字段 : lingbao_gift.operate_time
     */
    private Date operateTime;

    /**
     * 优先级,由高到底排序
     * 表字段 : lingbao_gift.level
     */
    private Integer level;

    /**
     * 图片路径：大（详情页图片）
     * 表字段 : lingbao_gift.picture_big
     */
    private String pictureBig;

    /**
     * 图片路径：中（列表页图片）
     * 表字段 : lingbao_gift.picture_middle
     */
    private String pictureMiddle;

    /**
     * 图片路径：小（侧栏图片）
     * 表字段 : lingbao_gift.picture_small
     */
    private String pictureSmall;

    /**
     * 大小
     * 表字段 : lingbao_gift.size
     */
    private String size;

    /**
     * 体积
     * 表字段 : lingbao_gift.volume
     */
    private String volume;

    /**
     * 颜色
     * 表字段 : lingbao_gift.color
     */
    private String color;

    /**
     * 形状
     * 表字段 : lingbao_gift.shape
     */
    private String shape;

    /**
     * 面值
     * 表字段 : lingbao_gift.cost_value
     */
    private String costValue;

    /**
     * 供应商ID
     * 表字段 : lingbao_gift.supplier_id
     */
    private Integer supplierId;

    /**
     * 应用类型。0兑换，1抽奖，2两者皆可
     * 表字段 : lingbao_gift.apply_type
     */
    private Integer applyType;

    /**
     * 规格描述
     * 表字段 : lingbao_gift.property_desc
     */
    private String propertyDesc;

    /**
     * 图片路径：手机（抽奖图片）
     * 表字段 : lingbao_gift.picture_mobile
     */
    private String pictureMobile;

    /**
     * hx_red_packet.id
     * 表字段 : lingbao_gift.redpacket_id
     */
    private String redpacketId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lingbao_gift
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:lingbao_gift.id
     *
     * @return lingbao_gift.id, 主键
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 主键 字段:lingbao_gift.id
     *
     * @param id the value for lingbao_gift.id, 主键
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 名称 字段:lingbao_gift.name
     *
     * @return lingbao_gift.name, 名称
     */
    public String getName() {
        return name;
    }

    /**
     * 设置 名称 字段:lingbao_gift.name
     *
     * @param name the value for lingbao_gift.name, 名称
     */
    public void setName(String name) {
        this.name = name == null ? null : name.trim();
    }

    /**
     * 获取 礼品代码：（type_id前补0）3位type_id+（id前补0）4位id 字段:lingbao_gift.code
     *
     * @return lingbao_gift.code, 礼品代码：（type_id前补0）3位type_id+（id前补0）4位id
     */
    public String getCode() {
        return code;
    }

    /**
     * 设置 礼品代码：（type_id前补0）3位type_id+（id前补0）4位id 字段:lingbao_gift.code
     *
     * @param code the value for lingbao_gift.code, 礼品代码：（type_id前补0）3位type_id+（id前补0）4位id
     */
    public void setCode(String code) {
        this.code = code == null ? null : code.trim();
    }

    /**
     * 获取 领宝礼品类型id 字段:lingbao_gift.type_id
     *
     * @return lingbao_gift.type_id, 领宝礼品类型id
     */
    public Integer getTypeId() {
        return typeId;
    }

    /**
     * 设置 领宝礼品类型id 字段:lingbao_gift.type_id
     *
     * @param typeId the value for lingbao_gift.type_id, 领宝礼品类型id
     */
    public void setTypeId(Integer typeId) {
        this.typeId = typeId;
    }

    /**
     * 获取 类型。0实物礼品 1虚拟礼品 2领宝 字段:lingbao_gift.type
     *
     * @return lingbao_gift.type, 类型。0实物礼品 1虚拟礼品 2领宝
     */
    public Integer getType() {
        return type;
    }

    /**
     * 设置 类型。0实物礼品 1虚拟礼品 2领宝 字段:lingbao_gift.type
     *
     * @param type the value for lingbao_gift.type, 类型。0实物礼品 1虚拟礼品 2领宝
     */
    public void setType(Integer type) {
        this.type = type;
    }

    /**
     * 获取 兑换所需积分(领宝个数) 字段:lingbao_gift.integral
     *
     * @return lingbao_gift.integral, 兑换所需积分(领宝个数)
     */
    public Integer getIntegral() {
        return integral;
    }

    /**
     * 设置 兑换所需积分(领宝个数) 字段:lingbao_gift.integral
     *
     * @param integral the value for lingbao_gift.integral, 兑换所需积分(领宝个数)
     */
    public void setIntegral(Integer integral) {
        this.integral = integral;
    }

    /**
     * 获取 特惠积分 字段:lingbao_gift.preferential_integral
     *
     * @return lingbao_gift.preferential_integral, 特惠积分
     */
    public Integer getPreferentialIntegral() {
        return preferentialIntegral;
    }

    /**
     * 设置 特惠积分 字段:lingbao_gift.preferential_integral
     *
     * @param preferentialIntegral the value for lingbao_gift.preferential_integral, 特惠积分
     */
    public void setPreferentialIntegral(Integer preferentialIntegral) {
        this.preferentialIntegral = preferentialIntegral;
    }

    /**
     * 获取 入库数量（不可改） 字段:lingbao_gift.has_store
     *
     * @return lingbao_gift.has_store, 入库数量（不可改）
     */
    public Integer getHasStore() {
        return hasStore;
    }

    /**
     * 设置 入库数量（不可改） 字段:lingbao_gift.has_store
     *
     * @param hasStore the value for lingbao_gift.has_store, 入库数量（不可改）
     */
    public void setHasStore(Integer hasStore) {
        this.hasStore = hasStore;
    }

    /**
     * 获取 当前库存数量 字段:lingbao_gift.store
     *
     * @return lingbao_gift.store, 当前库存数量
     */
    public Integer getStore() {
        return store;
    }

    /**
     * 设置 当前库存数量 字段:lingbao_gift.store
     *
     * @param store the value for lingbao_gift.store, 当前库存数量
     */
    public void setStore(Integer store) {
        this.store = store;
    }

    /**
     * 获取 库存预警。有库存上限且库存小于等于预警值，则提示。 字段:lingbao_gift.warning_store
     *
     * @return lingbao_gift.warning_store, 库存预警。有库存上限且库存小于等于预警值，则提示。
     */
    public Integer getWarningStore() {
        return warningStore;
    }

    /**
     * 设置 库存预警。有库存上限且库存小于等于预警值，则提示。 字段:lingbao_gift.warning_store
     *
     * @param warningStore the value for lingbao_gift.warning_store, 库存预警。有库存上限且库存小于等于预警值，则提示。
     */
    public void setWarningStore(Integer warningStore) {
        this.warningStore = warningStore;
    }

    /**
     * 获取 礼品归属地（通用或地域限制） 字段:lingbao_gift.attribution
     *
     * @return lingbao_gift.attribution, 礼品归属地（通用或地域限制）
     */
    public String getAttribution() {
        return attribution;
    }

    /**
     * 设置 礼品归属地（通用或地域限制） 字段:lingbao_gift.attribution
     *
     * @param attribution the value for lingbao_gift.attribution, 礼品归属地（通用或地域限制）
     */
    public void setAttribution(String attribution) {
        this.attribution = attribution == null ? null : attribution.trim();
    }

    /**
     * 获取 成本价：领钱儿与商家签订的一种礼品的价格，属于内部价格 字段:lingbao_gift.cost_price
     *
     * @return lingbao_gift.cost_price, 成本价：领钱儿与商家签订的一种礼品的价格，属于内部价格
     */
    public BigDecimal getCostPrice() {
        return costPrice;
    }

    /**
     * 设置 成本价：领钱儿与商家签订的一种礼品的价格，属于内部价格 字段:lingbao_gift.cost_price
     *
     * @param costPrice the value for lingbao_gift.cost_price, 成本价：领钱儿与商家签订的一种礼品的价格，属于内部价格
     */
    public void setCostPrice(BigDecimal costPrice) {
        this.costPrice = costPrice;
    }

    /**
     * 获取 市场价：公开给客户参考的价格 字段:lingbao_gift.market_price
     *
     * @return lingbao_gift.market_price, 市场价：公开给客户参考的价格
     */
    public BigDecimal getMarketPrice() {
        return marketPrice;
    }

    /**
     * 设置 市场价：公开给客户参考的价格 字段:lingbao_gift.market_price
     *
     * @param marketPrice the value for lingbao_gift.market_price, 市场价：公开给客户参考的价格
     */
    public void setMarketPrice(BigDecimal marketPrice) {
        this.marketPrice = marketPrice;
    }

    /**
     * 获取 礼品上下架：0下架，1上架 字段:lingbao_gift.shelf_status
     *
     * @return lingbao_gift.shelf_status, 礼品上下架：0下架，1上架
     */
    public Integer getShelfStatus() {
        return shelfStatus;
    }

    /**
     * 设置 礼品上下架：0下架，1上架 字段:lingbao_gift.shelf_status
     *
     * @param shelfStatus the value for lingbao_gift.shelf_status, 礼品上下架：0下架，1上架
     */
    public void setShelfStatus(Integer shelfStatus) {
        this.shelfStatus = shelfStatus;
    }

    /**
     * 获取 是否最新上架：0否，1是 字段:lingbao_gift.new_status
     *
     * @return lingbao_gift.new_status, 是否最新上架：0否，1是
     */
    public Integer getNewStatus() {
        return newStatus;
    }

    /**
     * 设置 是否最新上架：0否，1是 字段:lingbao_gift.new_status
     *
     * @param newStatus the value for lingbao_gift.new_status, 是否最新上架：0否，1是
     */
    public void setNewStatus(Integer newStatus) {
        this.newStatus = newStatus;
    }

    /**
     * 获取 是否推荐：0否，1是 字段:lingbao_gift.recommend
     *
     * @return lingbao_gift.recommend, 是否推荐：0否，1是
     */
    public Integer getRecommend() {
        return recommend;
    }

    /**
     * 设置 是否推荐：0否，1是 字段:lingbao_gift.recommend
     *
     * @param recommend the value for lingbao_gift.recommend, 是否推荐：0否，1是
     */
    public void setRecommend(Integer recommend) {
        this.recommend = recommend;
    }

    /**
     * 获取 已兑换数量 字段:lingbao_gift.exchange_count
     *
     * @return lingbao_gift.exchange_count, 已兑换数量
     */
    public Integer getExchangeCount() {
        return exchangeCount;
    }

    /**
     * 设置 已兑换数量 字段:lingbao_gift.exchange_count
     *
     * @param exchangeCount the value for lingbao_gift.exchange_count, 已兑换数量
     */
    public void setExchangeCount(Integer exchangeCount) {
        this.exchangeCount = exchangeCount;
    }

    /**
     * 获取 限制单次兑换个数，默认不限制。 字段:lingbao_gift.exchange_number
     *
     * @return lingbao_gift.exchange_number, 限制单次兑换个数，默认不限制。
     */
    public Integer getExchangeNumber() {
        return exchangeNumber;
    }

    /**
     * 设置 限制单次兑换个数，默认不限制。 字段:lingbao_gift.exchange_number
     *
     * @param exchangeNumber the value for lingbao_gift.exchange_number, 限制单次兑换个数，默认不限制。
     */
    public void setExchangeNumber(Integer exchangeNumber) {
        this.exchangeNumber = exchangeNumber;
    }

    /**
     * 获取 礼品领取方式：0寄送，1自取，2无需领取 字段:lingbao_gift.receive_way
     *
     * @return lingbao_gift.receive_way, 礼品领取方式：0寄送，1自取，2无需领取
     */
    public Integer getReceiveWay() {
        return receiveWay;
    }

    /**
     * 设置 礼品领取方式：0寄送，1自取，2无需领取 字段:lingbao_gift.receive_way
     *
     * @param receiveWay the value for lingbao_gift.receive_way, 礼品领取方式：0寄送，1自取，2无需领取
     */
    public void setReceiveWay(Integer receiveWay) {
        this.receiveWay = receiveWay;
    }

    /**
     * 获取 入库人姓名 字段:lingbao_gift.instore_name
     *
     * @return lingbao_gift.instore_name, 入库人姓名
     */
    public String getInstoreName() {
        return instoreName;
    }

    /**
     * 设置 入库人姓名 字段:lingbao_gift.instore_name
     *
     * @param instoreName the value for lingbao_gift.instore_name, 入库人姓名
     */
    public void setInstoreName(String instoreName) {
        this.instoreName = instoreName == null ? null : instoreName.trim();
    }

    /**
     * 获取 入库时间 字段:lingbao_gift.instore_time
     *
     * @return lingbao_gift.instore_time, 入库时间
     */
    public Date getInstoreTime() {
        return instoreTime;
    }

    /**
     * 设置 入库时间 字段:lingbao_gift.instore_time
     *
     * @param instoreTime the value for lingbao_gift.instore_time, 入库时间
     */
    public void setInstoreTime(Date instoreTime) {
        this.instoreTime = instoreTime;
    }

    /**
     * 获取 操作人姓名 字段:lingbao_gift.operate_name
     *
     * @return lingbao_gift.operate_name, 操作人姓名
     */
    public String getOperateName() {
        return operateName;
    }

    /**
     * 设置 操作人姓名 字段:lingbao_gift.operate_name
     *
     * @param operateName the value for lingbao_gift.operate_name, 操作人姓名
     */
    public void setOperateName(String operateName) {
        this.operateName = operateName == null ? null : operateName.trim();
    }

    /**
     * 获取 操作时间 字段:lingbao_gift.operate_time
     *
     * @return lingbao_gift.operate_time, 操作时间
     */
    public Date getOperateTime() {
        return operateTime;
    }

    /**
     * 设置 操作时间 字段:lingbao_gift.operate_time
     *
     * @param operateTime the value for lingbao_gift.operate_time, 操作时间
     */
    public void setOperateTime(Date operateTime) {
        this.operateTime = operateTime;
    }

    /**
     * 获取 优先级,由高到底排序 字段:lingbao_gift.level
     *
     * @return lingbao_gift.level, 优先级,由高到底排序
     */
    public Integer getLevel() {
        return level;
    }

    /**
     * 设置 优先级,由高到底排序 字段:lingbao_gift.level
     *
     * @param level the value for lingbao_gift.level, 优先级,由高到底排序
     */
    public void setLevel(Integer level) {
        this.level = level;
    }

    /**
     * 获取 图片路径：大（详情页图片） 字段:lingbao_gift.picture_big
     *
     * @return lingbao_gift.picture_big, 图片路径：大（详情页图片）
     */
    public String getPictureBig() {
        return pictureBig;
    }

    /**
     * 设置 图片路径：大（详情页图片） 字段:lingbao_gift.picture_big
     *
     * @param pictureBig the value for lingbao_gift.picture_big, 图片路径：大（详情页图片）
     */
    public void setPictureBig(String pictureBig) {
        this.pictureBig = pictureBig == null ? null : pictureBig.trim();
    }

    /**
     * 获取 图片路径：中（列表页图片） 字段:lingbao_gift.picture_middle
     *
     * @return lingbao_gift.picture_middle, 图片路径：中（列表页图片）
     */
    public String getPictureMiddle() {
        return pictureMiddle;
    }

    /**
     * 设置 图片路径：中（列表页图片） 字段:lingbao_gift.picture_middle
     *
     * @param pictureMiddle the value for lingbao_gift.picture_middle, 图片路径：中（列表页图片）
     */
    public void setPictureMiddle(String pictureMiddle) {
        this.pictureMiddle = pictureMiddle == null ? null : pictureMiddle.trim();
    }

    /**
     * 获取 图片路径：小（侧栏图片） 字段:lingbao_gift.picture_small
     *
     * @return lingbao_gift.picture_small, 图片路径：小（侧栏图片）
     */
    public String getPictureSmall() {
        return pictureSmall;
    }

    /**
     * 设置 图片路径：小（侧栏图片） 字段:lingbao_gift.picture_small
     *
     * @param pictureSmall the value for lingbao_gift.picture_small, 图片路径：小（侧栏图片）
     */
    public void setPictureSmall(String pictureSmall) {
        this.pictureSmall = pictureSmall == null ? null : pictureSmall.trim();
    }

    /**
     * 获取 大小 字段:lingbao_gift.size
     *
     * @return lingbao_gift.size, 大小
     */
    public String getSize() {
        return size;
    }

    /**
     * 设置 大小 字段:lingbao_gift.size
     *
     * @param size the value for lingbao_gift.size, 大小
     */
    public void setSize(String size) {
        this.size = size == null ? null : size.trim();
    }

    /**
     * 获取 体积 字段:lingbao_gift.volume
     *
     * @return lingbao_gift.volume, 体积
     */
    public String getVolume() {
        return volume;
    }

    /**
     * 设置 体积 字段:lingbao_gift.volume
     *
     * @param volume the value for lingbao_gift.volume, 体积
     */
    public void setVolume(String volume) {
        this.volume = volume == null ? null : volume.trim();
    }

    /**
     * 获取 颜色 字段:lingbao_gift.color
     *
     * @return lingbao_gift.color, 颜色
     */
    public String getColor() {
        return color;
    }

    /**
     * 设置 颜色 字段:lingbao_gift.color
     *
     * @param color the value for lingbao_gift.color, 颜色
     */
    public void setColor(String color) {
        this.color = color == null ? null : color.trim();
    }

    /**
     * 获取 形状 字段:lingbao_gift.shape
     *
     * @return lingbao_gift.shape, 形状
     */
    public String getShape() {
        return shape;
    }

    /**
     * 设置 形状 字段:lingbao_gift.shape
     *
     * @param shape the value for lingbao_gift.shape, 形状
     */
    public void setShape(String shape) {
        this.shape = shape == null ? null : shape.trim();
    }

    /**
     * 获取 面值 字段:lingbao_gift.cost_value
     *
     * @return lingbao_gift.cost_value, 面值
     */
    public String getCostValue() {
        return costValue;
    }

    /**
     * 设置 面值 字段:lingbao_gift.cost_value
     *
     * @param costValue the value for lingbao_gift.cost_value, 面值
     */
    public void setCostValue(String costValue) {
        this.costValue = costValue == null ? null : costValue.trim();
    }

    /**
     * 获取 供应商ID 字段:lingbao_gift.supplier_id
     *
     * @return lingbao_gift.supplier_id, 供应商ID
     */
    public Integer getSupplierId() {
        return supplierId;
    }

    /**
     * 设置 供应商ID 字段:lingbao_gift.supplier_id
     *
     * @param supplierId the value for lingbao_gift.supplier_id, 供应商ID
     */
    public void setSupplierId(Integer supplierId) {
        this.supplierId = supplierId;
    }

    /**
     * 获取 应用类型。0兑换，1抽奖，2两者皆可 字段:lingbao_gift.apply_type
     *
     * @return lingbao_gift.apply_type, 应用类型。0兑换，1抽奖，2两者皆可
     */
    public Integer getApplyType() {
        return applyType;
    }

    /**
     * 设置 应用类型。0兑换，1抽奖，2两者皆可 字段:lingbao_gift.apply_type
     *
     * @param applyType the value for lingbao_gift.apply_type, 应用类型。0兑换，1抽奖，2两者皆可
     */
    public void setApplyType(Integer applyType) {
        this.applyType = applyType;
    }

    /**
     * 获取 规格描述 字段:lingbao_gift.property_desc
     *
     * @return lingbao_gift.property_desc, 规格描述
     */
    public String getPropertyDesc() {
        return propertyDesc;
    }

    /**
     * 设置 规格描述 字段:lingbao_gift.property_desc
     *
     * @param propertyDesc the value for lingbao_gift.property_desc, 规格描述
     */
    public void setPropertyDesc(String propertyDesc) {
        this.propertyDesc = propertyDesc == null ? null : propertyDesc.trim();
    }

    /**
     * 获取 图片路径：手机（抽奖图片） 字段:lingbao_gift.picture_mobile
     *
     * @return lingbao_gift.picture_mobile, 图片路径：手机（抽奖图片）
     */
    public String getPictureMobile() {
        return pictureMobile;
    }

    /**
     * 设置 图片路径：手机（抽奖图片） 字段:lingbao_gift.picture_mobile
     *
     * @param pictureMobile the value for lingbao_gift.picture_mobile, 图片路径：手机（抽奖图片）
     */
    public void setPictureMobile(String pictureMobile) {
        this.pictureMobile = pictureMobile == null ? null : pictureMobile.trim();
    }

    /**
     * 获取 hx_red_packet.id 字段:lingbao_gift.redpacket_id
     *
     * @return lingbao_gift.redpacket_id, hx_red_packet.id
     */
    public String getRedpacketId() {
        return redpacketId;
    }

    /**
     * 设置 hx_red_packet.id 字段:lingbao_gift.redpacket_id
     *
     * @param redpacketId the value for lingbao_gift.redpacket_id, hx_red_packet.id
     */
    public void setRedpacketId(String redpacketId) {
        this.redpacketId = redpacketId == null ? null : redpacketId.trim();
    }

    /**
     * ,lingbao_gift
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", name=").append(name);
        sb.append(", code=").append(code);
        sb.append(", typeId=").append(typeId);
        sb.append(", type=").append(type);
        sb.append(", integral=").append(integral);
        sb.append(", preferentialIntegral=").append(preferentialIntegral);
        sb.append(", hasStore=").append(hasStore);
        sb.append(", store=").append(store);
        sb.append(", warningStore=").append(warningStore);
        sb.append(", attribution=").append(attribution);
        sb.append(", costPrice=").append(costPrice);
        sb.append(", marketPrice=").append(marketPrice);
        sb.append(", shelfStatus=").append(shelfStatus);
        sb.append(", newStatus=").append(newStatus);
        sb.append(", recommend=").append(recommend);
        sb.append(", exchangeCount=").append(exchangeCount);
        sb.append(", exchangeNumber=").append(exchangeNumber);
        sb.append(", receiveWay=").append(receiveWay);
        sb.append(", instoreName=").append(instoreName);
        sb.append(", instoreTime=").append(instoreTime);
        sb.append(", operateName=").append(operateName);
        sb.append(", operateTime=").append(operateTime);
        sb.append(", level=").append(level);
        sb.append(", pictureBig=").append(pictureBig);
        sb.append(", pictureMiddle=").append(pictureMiddle);
        sb.append(", pictureSmall=").append(pictureSmall);
        sb.append(", size=").append(size);
        sb.append(", volume=").append(volume);
        sb.append(", color=").append(color);
        sb.append(", shape=").append(shape);
        sb.append(", costValue=").append(costValue);
        sb.append(", supplierId=").append(supplierId);
        sb.append(", applyType=").append(applyType);
        sb.append(", propertyDesc=").append(propertyDesc);
        sb.append(", pictureMobile=").append(pictureMobile);
        sb.append(", redpacketId=").append(redpacketId);
        sb.append("]");
        return sb.toString();
    }
}