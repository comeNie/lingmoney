package com.mrbt.lingmoney.model;

import java.io.Serializable;

public class RechargeLimit implements Serializable {
    /**
     * 主键
     * 表字段 : recharge_limit.id
     */
    private Integer id;

    /**
     * 银行名称
     * 表字段 : recharge_limit.bank_name
     */
    private String bankName;

    /**
     * 单笔限额
     * 表字段 : recharge_limit.everytime_limit
     */
    private Integer everytimeLimit;

    /**
     * 单日限额
     * 表字段 : recharge_limit.everyday_limit
     */
    private Integer everydayLimit;

    /**
     * 每月限额
     * 表字段 : recharge_limit.everymonth_limit
     */
    private Integer everymonthLimit;

    /**
     * 银行logo路径
     * 表字段 : recharge_limit.bank_logo
     */
    private String bankLogo;

    /**
     * 状态 0显示 1不显示
     * 表字段 : recharge_limit.status
     */
    private Integer status;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:recharge_limit.id
     *
     * @return recharge_limit.id, 主键
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 主键 字段:recharge_limit.id
     *
     * @param id the value for recharge_limit.id, 主键
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 银行名称 字段:recharge_limit.bank_name
     *
     * @return recharge_limit.bank_name, 银行名称
     */
    public String getBankName() {
        return bankName;
    }

    /**
     * 设置 银行名称 字段:recharge_limit.bank_name
     *
     * @param bankName the value for recharge_limit.bank_name, 银行名称
     */
    public void setBankName(String bankName) {
        this.bankName = bankName == null ? null : bankName.trim();
    }

    /**
     * 获取 单笔限额 字段:recharge_limit.everytime_limit
     *
     * @return recharge_limit.everytime_limit, 单笔限额
     */
    public Integer getEverytimeLimit() {
        return everytimeLimit;
    }

    /**
     * 设置 单笔限额 字段:recharge_limit.everytime_limit
     *
     * @param everytimeLimit the value for recharge_limit.everytime_limit, 单笔限额
     */
    public void setEverytimeLimit(Integer everytimeLimit) {
        this.everytimeLimit = everytimeLimit;
    }

    /**
     * 获取 单日限额 字段:recharge_limit.everyday_limit
     *
     * @return recharge_limit.everyday_limit, 单日限额
     */
    public Integer getEverydayLimit() {
        return everydayLimit;
    }

    /**
     * 设置 单日限额 字段:recharge_limit.everyday_limit
     *
     * @param everydayLimit the value for recharge_limit.everyday_limit, 单日限额
     */
    public void setEverydayLimit(Integer everydayLimit) {
        this.everydayLimit = everydayLimit;
    }

    /**
     * 获取 每月限额 字段:recharge_limit.everymonth_limit
     *
     * @return recharge_limit.everymonth_limit, 每月限额
     */
    public Integer getEverymonthLimit() {
        return everymonthLimit;
    }

    /**
     * 设置 每月限额 字段:recharge_limit.everymonth_limit
     *
     * @param everymonthLimit the value for recharge_limit.everymonth_limit, 每月限额
     */
    public void setEverymonthLimit(Integer everymonthLimit) {
        this.everymonthLimit = everymonthLimit;
    }

    /**
     * 获取 银行logo路径 字段:recharge_limit.bank_logo
     *
     * @return recharge_limit.bank_logo, 银行logo路径
     */
    public String getBankLogo() {
        return bankLogo;
    }

    /**
     * 设置 银行logo路径 字段:recharge_limit.bank_logo
     *
     * @param bankLogo the value for recharge_limit.bank_logo, 银行logo路径
     */
    public void setBankLogo(String bankLogo) {
        this.bankLogo = bankLogo == null ? null : bankLogo.trim();
    }

    /**
     * 获取 状态 0显示 1不显示 字段:recharge_limit.status
     *
     * @return recharge_limit.status, 状态 0显示 1不显示
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态 0显示 1不显示 字段:recharge_limit.status
     *
     * @param status the value for recharge_limit.status, 状态 0显示 1不显示
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * ,recharge_limit
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", bankName=").append(bankName);
        sb.append(", everytimeLimit=").append(everytimeLimit);
        sb.append(", everydayLimit=").append(everydayLimit);
        sb.append(", everymonthLimit=").append(everymonthLimit);
        sb.append(", bankLogo=").append(bankLogo);
        sb.append(", status=").append(status);
        sb.append("]");
        return sb.toString();
    }
}