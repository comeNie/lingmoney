package com.mrbt.lingmoney.model;

import java.io.Serializable;

public class AdminMenu implements Serializable {
    /**
     * 主键
     * 表字段 : admin_menu.id
     */
    private Integer id;

    /**
     * 节点的名称
     * 表字段 : admin_menu.text
     */
    private String text;

    /**
     * 父节点的id
     * 表字段 : admin_menu.pid
     */
    private Integer pid;

    /**
     * url链接地址
     * 表字段 : admin_menu.url
     */
    private String url;

    /**
     * 图标
     * 表字段 : admin_menu.icon
     */
    private String icon;

    /**
     * 排序
     * 表字段 : admin_menu.seq
     */
    private Integer seq;

    /**
     * 是否能删除，0不能删除，1能删除
     * 表字段 : admin_menu.state
     */
    private Integer state;

    /**
     * 状态，0不可用，1可用。
     * 表字段 : admin_menu.status
     */
    private Integer status;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table admin_menu
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:admin_menu.id
     *
     * @return admin_menu.id, 主键
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 主键 字段:admin_menu.id
     *
     * @param id the value for admin_menu.id, 主键
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 节点的名称 字段:admin_menu.text
     *
     * @return admin_menu.text, 节点的名称
     */
    public String getText() {
        return text;
    }

    /**
     * 设置 节点的名称 字段:admin_menu.text
     *
     * @param text the value for admin_menu.text, 节点的名称
     */
    public void setText(String text) {
        this.text = text == null ? null : text.trim();
    }

    /**
     * 获取 父节点的id 字段:admin_menu.pid
     *
     * @return admin_menu.pid, 父节点的id
     */
    public Integer getPid() {
        return pid;
    }

    /**
     * 设置 父节点的id 字段:admin_menu.pid
     *
     * @param pid the value for admin_menu.pid, 父节点的id
     */
    public void setPid(Integer pid) {
        this.pid = pid;
    }

    /**
     * 获取 url链接地址 字段:admin_menu.url
     *
     * @return admin_menu.url, url链接地址
     */
    public String getUrl() {
        return url;
    }

    /**
     * 设置 url链接地址 字段:admin_menu.url
     *
     * @param url the value for admin_menu.url, url链接地址
     */
    public void setUrl(String url) {
        this.url = url == null ? null : url.trim();
    }

    /**
     * 获取 图标 字段:admin_menu.icon
     *
     * @return admin_menu.icon, 图标
     */
    public String getIcon() {
        return icon;
    }

    /**
     * 设置 图标 字段:admin_menu.icon
     *
     * @param icon the value for admin_menu.icon, 图标
     */
    public void setIcon(String icon) {
        this.icon = icon == null ? null : icon.trim();
    }

    /**
     * 获取 排序 字段:admin_menu.seq
     *
     * @return admin_menu.seq, 排序
     */
    public Integer getSeq() {
        return seq;
    }

    /**
     * 设置 排序 字段:admin_menu.seq
     *
     * @param seq the value for admin_menu.seq, 排序
     */
    public void setSeq(Integer seq) {
        this.seq = seq;
    }

    /**
     * 获取 是否能删除，0不能删除，1能删除 字段:admin_menu.state
     *
     * @return admin_menu.state, 是否能删除，0不能删除，1能删除
     */
    public Integer getState() {
        return state;
    }

    /**
     * 设置 是否能删除，0不能删除，1能删除 字段:admin_menu.state
     *
     * @param state the value for admin_menu.state, 是否能删除，0不能删除，1能删除
     */
    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * 获取 状态，0不可用，1可用。 字段:admin_menu.status
     *
     * @return admin_menu.status, 状态，0不可用，1可用。
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态，0不可用，1可用。 字段:admin_menu.status
     *
     * @param status the value for admin_menu.status, 状态，0不可用，1可用。
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * ,admin_menu
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", text=").append(text);
        sb.append(", pid=").append(pid);
        sb.append(", url=").append(url);
        sb.append(", icon=").append(icon);
        sb.append(", seq=").append(seq);
        sb.append(", state=").append(state);
        sb.append(", status=").append(status);
        sb.append("]");
        return sb.toString();
    }
}