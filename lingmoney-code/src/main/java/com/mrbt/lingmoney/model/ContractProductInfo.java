package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class ContractProductInfo implements Serializable {
    /**
     * 主键
     * 表字段 : contract_product_info.p_id
     */
    private Integer pId;

    /**
     * 主键
     * 表字段 : contract_product_info.tid
     */
    private Integer tid;

    /**
     * 绑定手机(可用于登录)
     * 表字段 : contract_product_info.telephone
     */
    private String telephone;

    /**
     * 根据code码配置web项目中的处理类
            生成规则：product_category中的code码+4位前补0的id
     * 表字段 : contract_product_info.p_code
     */
    private String pCode;

    /**
     * 产品名称
     * 表字段 : contract_product_info.p_name
     */
    private String pName;

    /**
     * 交易码:日期时间+5位左补0（产品id）+买入0+7位左补0用户id
     * 表字段 : contract_product_info.biz_code
     */
    private String bizCode;

    /**
     * 姓名
     * 表字段 : contract_product_info.name
     */
    private String name;

    /**
     * 身份证号
     * 表字段 : contract_product_info.id_card
     */
    private String idCard;

    /**
     * 购买的金额
     * 表字段 : contract_product_info.buy_money
     */
    private BigDecimal buyMoney;

    /**
     * 固定期限
     * 表字段 : contract_product_info.f_time
     */
    private Integer fTime;

    /**
     * 固定收益率
     * 表字段 : contract_product_info.f_yield
     */
    private BigDecimal fYield;

    /**
     * 产品计息日
     * 表字段 : contract_product_info.value_dt
     */
    private Date valueDt;

    /**
     * 可赎回的日期
     * 表字段 : contract_product_info.min_sell_dt
     */
    private Date minSellDt;

    /**
     * 利息
     * 表字段 : contract_product_info.interest
     */
    private BigDecimal interest;

    /**
     * 准备筹备的金额
     * 表字段 : contract_product_info.prior_money
     */
    private BigDecimal priorMoney;

    /**
     * 已经筹到的金额
     * 表字段 : contract_product_info.reach_money
     */
    private BigDecimal reachMoney;

    /**
     * 产品分类名称
     * 表字段 : contract_product_info.pc_name
     */
    private String pcName;

    /**
     * 产品所属 0，领钱儿    1，中粮
     * 表字段 : contract_product_info.p_type
     */
    private Integer pType;

    /**
     * 
     * 表字段 : contract_product_info.platform_user_no
     */
    private Integer platformUserNo;

    /**
     * 产品成立日
     * 表字段 : contract_product_info.establish_dt
     */
    private Date establishDt;

    /**
     * 
     * 表字段 : contract_product_info.u_id
     */
    private String uId;

    /**
     * 购买日期
     * 表字段 : contract_product_info.buy_dt
     */
    private Date buyDt;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table contract_product_info
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:contract_product_info.p_id
     *
     * @return contract_product_info.p_id, 主键
     */
    public Integer getpId() {
        return pId;
    }

    /**
     * 设置 主键 字段:contract_product_info.p_id
     *
     * @param pId the value for contract_product_info.p_id, 主键
     */
    public void setpId(Integer pId) {
        this.pId = pId;
    }

    /**
     * 获取 主键 字段:contract_product_info.tid
     *
     * @return contract_product_info.tid, 主键
     */
    public Integer getTid() {
        return tid;
    }

    /**
     * 设置 主键 字段:contract_product_info.tid
     *
     * @param tid the value for contract_product_info.tid, 主键
     */
    public void setTid(Integer tid) {
        this.tid = tid;
    }

    /**
     * 获取 绑定手机(可用于登录) 字段:contract_product_info.telephone
     *
     * @return contract_product_info.telephone, 绑定手机(可用于登录)
     */
    public String getTelephone() {
        return telephone;
    }

    /**
     * 设置 绑定手机(可用于登录) 字段:contract_product_info.telephone
     *
     * @param telephone the value for contract_product_info.telephone, 绑定手机(可用于登录)
     */
    public void setTelephone(String telephone) {
        this.telephone = telephone == null ? null : telephone.trim();
    }

    /**
     * 获取 根据code码配置web项目中的处理类
            生成规则：product_category中的code码+4位前补0的id 字段:contract_product_info.p_code
     *
     * @return contract_product_info.p_code, 根据code码配置web项目中的处理类
            生成规则：product_category中的code码+4位前补0的id
     */
    public String getpCode() {
        return pCode;
    }

    /**
     * 设置 根据code码配置web项目中的处理类
            生成规则：product_category中的code码+4位前补0的id 字段:contract_product_info.p_code
     *
     * @param pCode the value for contract_product_info.p_code, 根据code码配置web项目中的处理类
            生成规则：product_category中的code码+4位前补0的id
     */
    public void setpCode(String pCode) {
        this.pCode = pCode == null ? null : pCode.trim();
    }

    /**
     * 获取 产品名称 字段:contract_product_info.p_name
     *
     * @return contract_product_info.p_name, 产品名称
     */
    public String getpName() {
        return pName;
    }

    /**
     * 设置 产品名称 字段:contract_product_info.p_name
     *
     * @param pName the value for contract_product_info.p_name, 产品名称
     */
    public void setpName(String pName) {
        this.pName = pName == null ? null : pName.trim();
    }

    /**
     * 获取 交易码:日期时间+5位左补0（产品id）+买入0+7位左补0用户id 字段:contract_product_info.biz_code
     *
     * @return contract_product_info.biz_code, 交易码:日期时间+5位左补0（产品id）+买入0+7位左补0用户id
     */
    public String getBizCode() {
        return bizCode;
    }

    /**
     * 设置 交易码:日期时间+5位左补0（产品id）+买入0+7位左补0用户id 字段:contract_product_info.biz_code
     *
     * @param bizCode the value for contract_product_info.biz_code, 交易码:日期时间+5位左补0（产品id）+买入0+7位左补0用户id
     */
    public void setBizCode(String bizCode) {
        this.bizCode = bizCode == null ? null : bizCode.trim();
    }

    /**
     * 获取 姓名 字段:contract_product_info.name
     *
     * @return contract_product_info.name, 姓名
     */
    public String getName() {
        return name;
    }

    /**
     * 设置 姓名 字段:contract_product_info.name
     *
     * @param name the value for contract_product_info.name, 姓名
     */
    public void setName(String name) {
        this.name = name == null ? null : name.trim();
    }

    /**
     * 获取 身份证号 字段:contract_product_info.id_card
     *
     * @return contract_product_info.id_card, 身份证号
     */
    public String getIdCard() {
        return idCard;
    }

    /**
     * 设置 身份证号 字段:contract_product_info.id_card
     *
     * @param idCard the value for contract_product_info.id_card, 身份证号
     */
    public void setIdCard(String idCard) {
        this.idCard = idCard == null ? null : idCard.trim();
    }

    /**
     * 获取 购买的金额 字段:contract_product_info.buy_money
     *
     * @return contract_product_info.buy_money, 购买的金额
     */
    public BigDecimal getBuyMoney() {
        return buyMoney;
    }

    /**
     * 设置 购买的金额 字段:contract_product_info.buy_money
     *
     * @param buyMoney the value for contract_product_info.buy_money, 购买的金额
     */
    public void setBuyMoney(BigDecimal buyMoney) {
        this.buyMoney = buyMoney;
    }

    /**
     * 获取 固定期限 字段:contract_product_info.f_time
     *
     * @return contract_product_info.f_time, 固定期限
     */
    public Integer getfTime() {
        return fTime;
    }

    /**
     * 设置 固定期限 字段:contract_product_info.f_time
     *
     * @param fTime the value for contract_product_info.f_time, 固定期限
     */
    public void setfTime(Integer fTime) {
        this.fTime = fTime;
    }

    /**
     * 获取 固定收益率 字段:contract_product_info.f_yield
     *
     * @return contract_product_info.f_yield, 固定收益率
     */
    public BigDecimal getfYield() {
        return fYield;
    }

    /**
     * 设置 固定收益率 字段:contract_product_info.f_yield
     *
     * @param fYield the value for contract_product_info.f_yield, 固定收益率
     */
    public void setfYield(BigDecimal fYield) {
        this.fYield = fYield;
    }

    /**
     * 获取 产品计息日 字段:contract_product_info.value_dt
     *
     * @return contract_product_info.value_dt, 产品计息日
     */
    public Date getValueDt() {
        return valueDt;
    }

    /**
     * 设置 产品计息日 字段:contract_product_info.value_dt
     *
     * @param valueDt the value for contract_product_info.value_dt, 产品计息日
     */
    public void setValueDt(Date valueDt) {
        this.valueDt = valueDt;
    }

    /**
     * 获取 可赎回的日期 字段:contract_product_info.min_sell_dt
     *
     * @return contract_product_info.min_sell_dt, 可赎回的日期
     */
    public Date getMinSellDt() {
        return minSellDt;
    }

    /**
     * 设置 可赎回的日期 字段:contract_product_info.min_sell_dt
     *
     * @param minSellDt the value for contract_product_info.min_sell_dt, 可赎回的日期
     */
    public void setMinSellDt(Date minSellDt) {
        this.minSellDt = minSellDt;
    }

    /**
     * 获取 利息 字段:contract_product_info.interest
     *
     * @return contract_product_info.interest, 利息
     */
    public BigDecimal getInterest() {
        return interest;
    }

    /**
     * 设置 利息 字段:contract_product_info.interest
     *
     * @param interest the value for contract_product_info.interest, 利息
     */
    public void setInterest(BigDecimal interest) {
        this.interest = interest;
    }

    /**
     * 获取 准备筹备的金额 字段:contract_product_info.prior_money
     *
     * @return contract_product_info.prior_money, 准备筹备的金额
     */
    public BigDecimal getPriorMoney() {
        return priorMoney;
    }

    /**
     * 设置 准备筹备的金额 字段:contract_product_info.prior_money
     *
     * @param priorMoney the value for contract_product_info.prior_money, 准备筹备的金额
     */
    public void setPriorMoney(BigDecimal priorMoney) {
        this.priorMoney = priorMoney;
    }

    /**
     * 获取 已经筹到的金额 字段:contract_product_info.reach_money
     *
     * @return contract_product_info.reach_money, 已经筹到的金额
     */
    public BigDecimal getReachMoney() {
        return reachMoney;
    }

    /**
     * 设置 已经筹到的金额 字段:contract_product_info.reach_money
     *
     * @param reachMoney the value for contract_product_info.reach_money, 已经筹到的金额
     */
    public void setReachMoney(BigDecimal reachMoney) {
        this.reachMoney = reachMoney;
    }

    /**
     * 获取 产品分类名称 字段:contract_product_info.pc_name
     *
     * @return contract_product_info.pc_name, 产品分类名称
     */
    public String getPcName() {
        return pcName;
    }

    /**
     * 设置 产品分类名称 字段:contract_product_info.pc_name
     *
     * @param pcName the value for contract_product_info.pc_name, 产品分类名称
     */
    public void setPcName(String pcName) {
        this.pcName = pcName == null ? null : pcName.trim();
    }

    /**
     * 获取 产品所属 0，领钱儿    1，中粮 字段:contract_product_info.p_type
     *
     * @return contract_product_info.p_type, 产品所属 0，领钱儿    1，中粮
     */
    public Integer getpType() {
        return pType;
    }

    /**
     * 设置 产品所属 0，领钱儿    1，中粮 字段:contract_product_info.p_type
     *
     * @param pType the value for contract_product_info.p_type, 产品所属 0，领钱儿    1，中粮
     */
    public void setpType(Integer pType) {
        this.pType = pType;
    }

    /**
     * 获取  字段:contract_product_info.platform_user_no
     *
     * @return contract_product_info.platform_user_no, 
     */
    public Integer getPlatformUserNo() {
        return platformUserNo;
    }

    /**
     * 设置  字段:contract_product_info.platform_user_no
     *
     * @param platformUserNo the value for contract_product_info.platform_user_no, 
     */
    public void setPlatformUserNo(Integer platformUserNo) {
        this.platformUserNo = platformUserNo;
    }

    /**
     * 获取 产品成立日 字段:contract_product_info.establish_dt
     *
     * @return contract_product_info.establish_dt, 产品成立日
     */
    public Date getEstablishDt() {
        return establishDt;
    }

    /**
     * 设置 产品成立日 字段:contract_product_info.establish_dt
     *
     * @param establishDt the value for contract_product_info.establish_dt, 产品成立日
     */
    public void setEstablishDt(Date establishDt) {
        this.establishDt = establishDt;
    }

    /**
     * 获取  字段:contract_product_info.u_id
     *
     * @return contract_product_info.u_id, 
     */
    public String getuId() {
        return uId;
    }

    /**
     * 设置  字段:contract_product_info.u_id
     *
     * @param uId the value for contract_product_info.u_id, 
     */
    public void setuId(String uId) {
        this.uId = uId == null ? null : uId.trim();
    }

    /**
     * 获取 购买日期 字段:contract_product_info.buy_dt
     *
     * @return contract_product_info.buy_dt, 购买日期
     */
    public Date getBuyDt() {
        return buyDt;
    }

    /**
     * 设置 购买日期 字段:contract_product_info.buy_dt
     *
     * @param buyDt the value for contract_product_info.buy_dt, 购买日期
     */
    public void setBuyDt(Date buyDt) {
        this.buyDt = buyDt;
    }

    /**
     * ,contract_product_info
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", pId=").append(pId);
        sb.append(", tid=").append(tid);
        sb.append(", telephone=").append(telephone);
        sb.append(", pCode=").append(pCode);
        sb.append(", pName=").append(pName);
        sb.append(", bizCode=").append(bizCode);
        sb.append(", name=").append(name);
        sb.append(", idCard=").append(idCard);
        sb.append(", buyMoney=").append(buyMoney);
        sb.append(", fTime=").append(fTime);
        sb.append(", fYield=").append(fYield);
        sb.append(", valueDt=").append(valueDt);
        sb.append(", minSellDt=").append(minSellDt);
        sb.append(", interest=").append(interest);
        sb.append(", priorMoney=").append(priorMoney);
        sb.append(", reachMoney=").append(reachMoney);
        sb.append(", pcName=").append(pcName);
        sb.append(", pType=").append(pType);
        sb.append(", platformUserNo=").append(platformUserNo);
        sb.append(", establishDt=").append(establishDt);
        sb.append(", uId=").append(uId);
        sb.append(", buyDt=").append(buyDt);
        sb.append("]");
        return sb.toString();
    }
}