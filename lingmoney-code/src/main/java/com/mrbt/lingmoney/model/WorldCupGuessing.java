package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.util.Date;

public class WorldCupGuessing implements Serializable {
    /**
     * 
     * 表字段 : world_cup_guessing.id
     */
    private Integer id;

    /**
     * 用户ID
     * 表字段 : world_cup_guessing.u_id
     */
    private String uId;

    /**
     * 比赛ID
     * 表字段 : world_cup_guessing.match_id
     */
    private Integer matchId;

    /**
     * 竞猜选择
     * 表字段 : world_cup_guessing.game_choice
     */
    private Integer gameChoice;

    /**
     * 竞猜时间
     * 表字段 : world_cup_guessing.create_time
     */
    private Date createTime;

    /**
     * 抽奖状态，0未抽奖，1已抽奖
     * 表字段 : world_cup_guessing.luck_status
     */
    private Integer luckStatus;

    /**
     * 对应奖励
     * 表字段 : world_cup_guessing.draw_info
     */
    private String drawInfo;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table world_cup_guessing
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:world_cup_guessing.id
     *
     * @return world_cup_guessing.id, 
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:world_cup_guessing.id
     *
     * @param id the value for world_cup_guessing.id, 
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 用户ID 字段:world_cup_guessing.u_id
     *
     * @return world_cup_guessing.u_id, 用户ID
     */
    public String getuId() {
        return uId;
    }

    /**
     * 设置 用户ID 字段:world_cup_guessing.u_id
     *
     * @param uId the value for world_cup_guessing.u_id, 用户ID
     */
    public void setuId(String uId) {
        this.uId = uId == null ? null : uId.trim();
    }

    /**
     * 获取 比赛ID 字段:world_cup_guessing.match_id
     *
     * @return world_cup_guessing.match_id, 比赛ID
     */
    public Integer getMatchId() {
        return matchId;
    }

    /**
     * 设置 比赛ID 字段:world_cup_guessing.match_id
     *
     * @param matchId the value for world_cup_guessing.match_id, 比赛ID
     */
    public void setMatchId(Integer matchId) {
        this.matchId = matchId;
    }

    /**
     * 获取 竞猜选择 字段:world_cup_guessing.game_choice
     *
     * @return world_cup_guessing.game_choice, 竞猜选择
     */
    public Integer getGameChoice() {
        return gameChoice;
    }

    /**
     * 设置 竞猜选择 字段:world_cup_guessing.game_choice
     *
     * @param gameChoice the value for world_cup_guessing.game_choice, 竞猜选择
     */
    public void setGameChoice(Integer gameChoice) {
        this.gameChoice = gameChoice;
    }

    /**
     * 获取 竞猜时间 字段:world_cup_guessing.create_time
     *
     * @return world_cup_guessing.create_time, 竞猜时间
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 设置 竞猜时间 字段:world_cup_guessing.create_time
     *
     * @param createTime the value for world_cup_guessing.create_time, 竞猜时间
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * 获取 抽奖状态，0未抽奖，1已抽奖 字段:world_cup_guessing.luck_status
     *
     * @return world_cup_guessing.luck_status, 抽奖状态，0未抽奖，1已抽奖
     */
    public Integer getLuckStatus() {
        return luckStatus;
    }

    /**
     * 设置 抽奖状态，0未抽奖，1已抽奖 字段:world_cup_guessing.luck_status
     *
     * @param luckStatus the value for world_cup_guessing.luck_status, 抽奖状态，0未抽奖，1已抽奖
     */
    public void setLuckStatus(Integer luckStatus) {
        this.luckStatus = luckStatus;
    }

    /**
     * 获取 对应奖励 字段:world_cup_guessing.draw_info
     *
     * @return world_cup_guessing.draw_info, 对应奖励
     */
    public String getDrawInfo() {
        return drawInfo;
    }

    /**
     * 设置 对应奖励 字段:world_cup_guessing.draw_info
     *
     * @param drawInfo the value for world_cup_guessing.draw_info, 对应奖励
     */
    public void setDrawInfo(String drawInfo) {
        this.drawInfo = drawInfo == null ? null : drawInfo.trim();
    }

    /**
     * ,world_cup_guessing
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", uId=").append(uId);
        sb.append(", matchId=").append(matchId);
        sb.append(", gameChoice=").append(gameChoice);
        sb.append(", createTime=").append(createTime);
        sb.append(", luckStatus=").append(luckStatus);
        sb.append(", drawInfo=").append(drawInfo);
        sb.append("]");
        return sb.toString();
    }
}