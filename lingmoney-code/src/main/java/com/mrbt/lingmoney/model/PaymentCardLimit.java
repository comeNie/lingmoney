package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.math.BigDecimal;

public class PaymentCardLimit implements Serializable {
    /**
     * 
     * 表字段 : payment_card_limit.id
     */
    private Integer id;

    /**
     * 银行卡简称
     * 表字段 : payment_card_limit.card_short
     */
    private String cardShort;

    /**
     * 当前银行卡的兑付限额
     * 表字段 : payment_card_limit.limit_amount
     */
    private BigDecimal limitAmount;

    /**
     * 银行卡名称
     * 表字段 : payment_card_limit.card_name
     */
    private String cardName;

    /**
     * 到账类型，0：2小时到，1：t+1到
     * 表字段 : payment_card_limit.reach_type
     */
    private String reachType;

    /**
     * 状态，0：可用，1不可用
     * 表字段 : payment_card_limit.status
     */
    private Integer status;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table payment_card_limit
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:payment_card_limit.id
     *
     * @return payment_card_limit.id, 
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:payment_card_limit.id
     *
     * @param id the value for payment_card_limit.id, 
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 银行卡简称 字段:payment_card_limit.card_short
     *
     * @return payment_card_limit.card_short, 银行卡简称
     */
    public String getCardShort() {
        return cardShort;
    }

    /**
     * 设置 银行卡简称 字段:payment_card_limit.card_short
     *
     * @param cardShort the value for payment_card_limit.card_short, 银行卡简称
     */
    public void setCardShort(String cardShort) {
        this.cardShort = cardShort == null ? null : cardShort.trim();
    }

    /**
     * 获取 当前银行卡的兑付限额 字段:payment_card_limit.limit_amount
     *
     * @return payment_card_limit.limit_amount, 当前银行卡的兑付限额
     */
    public BigDecimal getLimitAmount() {
        return limitAmount;
    }

    /**
     * 设置 当前银行卡的兑付限额 字段:payment_card_limit.limit_amount
     *
     * @param limitAmount the value for payment_card_limit.limit_amount, 当前银行卡的兑付限额
     */
    public void setLimitAmount(BigDecimal limitAmount) {
        this.limitAmount = limitAmount;
    }

    /**
     * 获取 银行卡名称 字段:payment_card_limit.card_name
     *
     * @return payment_card_limit.card_name, 银行卡名称
     */
    public String getCardName() {
        return cardName;
    }

    /**
     * 设置 银行卡名称 字段:payment_card_limit.card_name
     *
     * @param cardName the value for payment_card_limit.card_name, 银行卡名称
     */
    public void setCardName(String cardName) {
        this.cardName = cardName == null ? null : cardName.trim();
    }

    /**
     * 获取 到账类型，0：2小时到，1：t+1到 字段:payment_card_limit.reach_type
     *
     * @return payment_card_limit.reach_type, 到账类型，0：2小时到，1：t+1到
     */
    public String getReachType() {
        return reachType;
    }

    /**
     * 设置 到账类型，0：2小时到，1：t+1到 字段:payment_card_limit.reach_type
     *
     * @param reachType the value for payment_card_limit.reach_type, 到账类型，0：2小时到，1：t+1到
     */
    public void setReachType(String reachType) {
        this.reachType = reachType == null ? null : reachType.trim();
    }

    /**
     * 获取 状态，0：可用，1不可用 字段:payment_card_limit.status
     *
     * @return payment_card_limit.status, 状态，0：可用，1不可用
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态，0：可用，1不可用 字段:payment_card_limit.status
     *
     * @param status the value for payment_card_limit.status, 状态，0：可用，1不可用
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * ,payment_card_limit
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", cardShort=").append(cardShort);
        sb.append(", limitAmount=").append(limitAmount);
        sb.append(", cardName=").append(cardName);
        sb.append(", reachType=").append(reachType);
        sb.append(", status=").append(status);
        sb.append("]");
        return sb.toString();
    }
}