package com.mrbt.lingmoney.model;

import java.util.ArrayList;
import java.util.List;

public class RechargeLimitExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recharge_limit
     *
     * @mbg.generated
     */
    protected int limitEnd = -1;

    /**
     *  构造查询条件,recharge_limit
     */
    public RechargeLimitExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *  设置排序字段,recharge_limit
     *
     * @param orderByClause 排序字段
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *  获取排序字段,recharge_limit
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *  设置过滤重复数据,recharge_limit
     *
     * @param distinct 是否过滤重复数据
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *  是否过滤重复数据,recharge_limit
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *  获取当前的查询条件实例,recharge_limit
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * ,recharge_limit
     *
     * @param criteria 过滤条件实例
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * ,recharge_limit
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *  创建一个查询条件,recharge_limit
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *  内部构建查询条件对象,recharge_limit
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *  清除查询条件,recharge_limit
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * ,recharge_limit
     *
     * @param limitStart
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * ,recharge_limit
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * ,recharge_limit
     *
     * @param limitEnd
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * ,recharge_limit
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * 类注释
     * GeneratedCriteria
     * 数据库表：recharge_limit
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBankNameIsNull() {
            addCriterion("bank_name is null");
            return (Criteria) this;
        }

        public Criteria andBankNameIsNotNull() {
            addCriterion("bank_name is not null");
            return (Criteria) this;
        }

        public Criteria andBankNameEqualTo(String value) {
            addCriterion("bank_name =", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameNotEqualTo(String value) {
            addCriterion("bank_name <>", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameGreaterThan(String value) {
            addCriterion("bank_name >", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameGreaterThanOrEqualTo(String value) {
            addCriterion("bank_name >=", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameLessThan(String value) {
            addCriterion("bank_name <", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameLessThanOrEqualTo(String value) {
            addCriterion("bank_name <=", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameLike(String value) {
            addCriterion("bank_name like", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameNotLike(String value) {
            addCriterion("bank_name not like", value, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameIn(List<String> values) {
            addCriterion("bank_name in", values, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameNotIn(List<String> values) {
            addCriterion("bank_name not in", values, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameBetween(String value1, String value2) {
            addCriterion("bank_name between", value1, value2, "bankName");
            return (Criteria) this;
        }

        public Criteria andBankNameNotBetween(String value1, String value2) {
            addCriterion("bank_name not between", value1, value2, "bankName");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitIsNull() {
            addCriterion("everytime_limit is null");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitIsNotNull() {
            addCriterion("everytime_limit is not null");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitEqualTo(Integer value) {
            addCriterion("everytime_limit =", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitNotEqualTo(Integer value) {
            addCriterion("everytime_limit <>", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitGreaterThan(Integer value) {
            addCriterion("everytime_limit >", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("everytime_limit >=", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitLessThan(Integer value) {
            addCriterion("everytime_limit <", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitLessThanOrEqualTo(Integer value) {
            addCriterion("everytime_limit <=", value, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitIn(List<Integer> values) {
            addCriterion("everytime_limit in", values, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitNotIn(List<Integer> values) {
            addCriterion("everytime_limit not in", values, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitBetween(Integer value1, Integer value2) {
            addCriterion("everytime_limit between", value1, value2, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverytimeLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("everytime_limit not between", value1, value2, "everytimeLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitIsNull() {
            addCriterion("everyday_limit is null");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitIsNotNull() {
            addCriterion("everyday_limit is not null");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitEqualTo(Integer value) {
            addCriterion("everyday_limit =", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitNotEqualTo(Integer value) {
            addCriterion("everyday_limit <>", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitGreaterThan(Integer value) {
            addCriterion("everyday_limit >", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("everyday_limit >=", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitLessThan(Integer value) {
            addCriterion("everyday_limit <", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitLessThanOrEqualTo(Integer value) {
            addCriterion("everyday_limit <=", value, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitIn(List<Integer> values) {
            addCriterion("everyday_limit in", values, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitNotIn(List<Integer> values) {
            addCriterion("everyday_limit not in", values, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitBetween(Integer value1, Integer value2) {
            addCriterion("everyday_limit between", value1, value2, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverydayLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("everyday_limit not between", value1, value2, "everydayLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitIsNull() {
            addCriterion("everymonth_limit is null");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitIsNotNull() {
            addCriterion("everymonth_limit is not null");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitEqualTo(Integer value) {
            addCriterion("everymonth_limit =", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitNotEqualTo(Integer value) {
            addCriterion("everymonth_limit <>", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitGreaterThan(Integer value) {
            addCriterion("everymonth_limit >", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("everymonth_limit >=", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitLessThan(Integer value) {
            addCriterion("everymonth_limit <", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitLessThanOrEqualTo(Integer value) {
            addCriterion("everymonth_limit <=", value, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitIn(List<Integer> values) {
            addCriterion("everymonth_limit in", values, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitNotIn(List<Integer> values) {
            addCriterion("everymonth_limit not in", values, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitBetween(Integer value1, Integer value2) {
            addCriterion("everymonth_limit between", value1, value2, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andEverymonthLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("everymonth_limit not between", value1, value2, "everymonthLimit");
            return (Criteria) this;
        }

        public Criteria andBankLogoIsNull() {
            addCriterion("bank_logo is null");
            return (Criteria) this;
        }

        public Criteria andBankLogoIsNotNull() {
            addCriterion("bank_logo is not null");
            return (Criteria) this;
        }

        public Criteria andBankLogoEqualTo(String value) {
            addCriterion("bank_logo =", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoNotEqualTo(String value) {
            addCriterion("bank_logo <>", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoGreaterThan(String value) {
            addCriterion("bank_logo >", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoGreaterThanOrEqualTo(String value) {
            addCriterion("bank_logo >=", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoLessThan(String value) {
            addCriterion("bank_logo <", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoLessThanOrEqualTo(String value) {
            addCriterion("bank_logo <=", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoLike(String value) {
            addCriterion("bank_logo like", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoNotLike(String value) {
            addCriterion("bank_logo not like", value, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoIn(List<String> values) {
            addCriterion("bank_logo in", values, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoNotIn(List<String> values) {
            addCriterion("bank_logo not in", values, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoBetween(String value1, String value2) {
            addCriterion("bank_logo between", value1, value2, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andBankLogoNotBetween(String value1, String value2) {
            addCriterion("bank_logo not between", value1, value2, "bankLogo");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：recharge_limit
     *
     * @mbg.generated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * 类注释
     * Criterion
     * 数据库表：recharge_limit
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}