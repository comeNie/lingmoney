package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.util.Date;

public class WorldCupProblem implements Serializable {
    /**
     * 
     * 表字段 : world_cup_problem.id
     */
    private Integer id;

    /**
     * 问题
     * 表字段 : world_cup_problem.problem
     */
    private String problem;

    /**
     * 选项列表，存入json
     * 表字段 : world_cup_problem.option_json
     */
    private String optionJson;

    /**
     * 答案,对应option_json的title
     * 表字段 : world_cup_problem.answer
     */
    private String answer;

    /**
     * 分值
     * 表字段 : world_cup_problem.divid_value
     */
    private Integer dividValue;

    /**
     * 状态
     * 表字段 : world_cup_problem.status
     */
    private Integer status;

    /**
     * 
     * 表字段 : world_cup_problem.create_time
     */
    private Date createTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table world_cup_problem
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:world_cup_problem.id
     *
     * @return world_cup_problem.id, 
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:world_cup_problem.id
     *
     * @param id the value for world_cup_problem.id, 
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 问题 字段:world_cup_problem.problem
     *
     * @return world_cup_problem.problem, 问题
     */
    public String getProblem() {
        return problem;
    }

    /**
     * 设置 问题 字段:world_cup_problem.problem
     *
     * @param problem the value for world_cup_problem.problem, 问题
     */
    public void setProblem(String problem) {
        this.problem = problem == null ? null : problem.trim();
    }

    /**
     * 获取 选项列表，存入json 字段:world_cup_problem.option_json
     *
     * @return world_cup_problem.option_json, 选项列表，存入json
     */
    public String getOptionJson() {
        return optionJson;
    }

    /**
     * 设置 选项列表，存入json 字段:world_cup_problem.option_json
     *
     * @param optionJson the value for world_cup_problem.option_json, 选项列表，存入json
     */
    public void setOptionJson(String optionJson) {
        this.optionJson = optionJson == null ? null : optionJson.trim();
    }

    /**
     * 获取 答案,对应option_json的title 字段:world_cup_problem.answer
     *
     * @return world_cup_problem.answer, 答案,对应option_json的title
     */
    public String getAnswer() {
        return answer;
    }

    /**
     * 设置 答案,对应option_json的title 字段:world_cup_problem.answer
     *
     * @param answer the value for world_cup_problem.answer, 答案,对应option_json的title
     */
    public void setAnswer(String answer) {
        this.answer = answer == null ? null : answer.trim();
    }

    /**
     * 获取 分值 字段:world_cup_problem.divid_value
     *
     * @return world_cup_problem.divid_value, 分值
     */
    public Integer getDividValue() {
        return dividValue;
    }

    /**
     * 设置 分值 字段:world_cup_problem.divid_value
     *
     * @param dividValue the value for world_cup_problem.divid_value, 分值
     */
    public void setDividValue(Integer dividValue) {
        this.dividValue = dividValue;
    }

    /**
     * 获取 状态 字段:world_cup_problem.status
     *
     * @return world_cup_problem.status, 状态
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态 字段:world_cup_problem.status
     *
     * @param status the value for world_cup_problem.status, 状态
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * 获取  字段:world_cup_problem.create_time
     *
     * @return world_cup_problem.create_time, 
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 设置  字段:world_cup_problem.create_time
     *
     * @param createTime the value for world_cup_problem.create_time, 
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * ,world_cup_problem
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", problem=").append(problem);
        sb.append(", optionJson=").append(optionJson);
        sb.append(", answer=").append(answer);
        sb.append(", dividValue=").append(dividValue);
        sb.append(", status=").append(status);
        sb.append(", createTime=").append(createTime);
        sb.append("]");
        return sb.toString();
    }
}