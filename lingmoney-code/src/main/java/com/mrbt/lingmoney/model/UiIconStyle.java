package com.mrbt.lingmoney.model;

import java.io.Serializable;

public class UiIconStyle implements Serializable {
    /**
     * 
     * 表字段 : ui_icon_style.id
     */
    private Integer id;

    /**
     * 
     * 表字段 : ui_icon_style.ui_key
     */
    private String uiKey;

    /**
     * 对应KEY描述
     * 表字段 : ui_icon_style.description
     */
    private String description;

    /**
     * 所属组
     * 表字段 : ui_icon_style.group_name
     */
    private String groupName;

    /**
     * 图片地址
     * 表字段 : ui_icon_style.url
     */
    private String url;

    /**
     * 状态 0 禁用  1启用
     * 表字段 : ui_icon_style.status
     */
    private Integer status;

    /**
     * 批次号
     * 表字段 : ui_icon_style.batch_number
     */
    private String batchNumber;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ui_icon_style
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:ui_icon_style.id
     *
     * @return ui_icon_style.id, 
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:ui_icon_style.id
     *
     * @param id the value for ui_icon_style.id, 
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取  字段:ui_icon_style.ui_key
     *
     * @return ui_icon_style.ui_key, 
     */
    public String getUiKey() {
        return uiKey;
    }

    /**
     * 设置  字段:ui_icon_style.ui_key
     *
     * @param uiKey the value for ui_icon_style.ui_key, 
     */
    public void setUiKey(String uiKey) {
        this.uiKey = uiKey == null ? null : uiKey.trim();
    }

    /**
     * 获取 对应KEY描述 字段:ui_icon_style.description
     *
     * @return ui_icon_style.description, 对应KEY描述
     */
    public String getDescription() {
        return description;
    }

    /**
     * 设置 对应KEY描述 字段:ui_icon_style.description
     *
     * @param description the value for ui_icon_style.description, 对应KEY描述
     */
    public void setDescription(String description) {
        this.description = description == null ? null : description.trim();
    }

    /**
     * 获取 所属组 字段:ui_icon_style.group_name
     *
     * @return ui_icon_style.group_name, 所属组
     */
    public String getGroupName() {
        return groupName;
    }

    /**
     * 设置 所属组 字段:ui_icon_style.group_name
     *
     * @param groupName the value for ui_icon_style.group_name, 所属组
     */
    public void setGroupName(String groupName) {
        this.groupName = groupName == null ? null : groupName.trim();
    }

    /**
     * 获取 图片地址 字段:ui_icon_style.url
     *
     * @return ui_icon_style.url, 图片地址
     */
    public String getUrl() {
        return url;
    }

    /**
     * 设置 图片地址 字段:ui_icon_style.url
     *
     * @param url the value for ui_icon_style.url, 图片地址
     */
    public void setUrl(String url) {
        this.url = url == null ? null : url.trim();
    }

    /**
     * 获取 状态 0 禁用  1启用 字段:ui_icon_style.status
     *
     * @return ui_icon_style.status, 状态 0 禁用  1启用
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 设置 状态 0 禁用  1启用 字段:ui_icon_style.status
     *
     * @param status the value for ui_icon_style.status, 状态 0 禁用  1启用
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * 获取 批次号 字段:ui_icon_style.batch_number
     *
     * @return ui_icon_style.batch_number, 批次号
     */
    public String getBatchNumber() {
        return batchNumber;
    }

    /**
     * 设置 批次号 字段:ui_icon_style.batch_number
     *
     * @param batchNumber the value for ui_icon_style.batch_number, 批次号
     */
    public void setBatchNumber(String batchNumber) {
        this.batchNumber = batchNumber == null ? null : batchNumber.trim();
    }

    /**
     * ,ui_icon_style
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", uiKey=").append(uiKey);
        sb.append(", description=").append(description);
        sb.append(", groupName=").append(groupName);
        sb.append(", url=").append(url);
        sb.append(", status=").append(status);
        sb.append(", batchNumber=").append(batchNumber);
        sb.append("]");
        return sb.toString();
    }
}