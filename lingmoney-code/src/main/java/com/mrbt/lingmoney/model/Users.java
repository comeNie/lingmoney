package com.mrbt.lingmoney.model;

import java.io.Serializable;
import java.util.Date;

public class Users implements Serializable {
    /**
     * 
     * 表字段 : users.id
     */
    private String id;

    /**
     * 登陆账号
     * 表字段 : users.login_account
     */
    private String loginAccount;

    /**
     * 登录密码
     * 表字段 : users.login_psw
     */
    private String loginPsw;

    /**
     * 绑定手机(可用于登录)
     * 表字段 : users.telephone
     */
    private String telephone;

    /**
     * 最后一次登录时间
     * 表字段 : users.last_login
     */
    private Date lastLogin;

    /**
     * 0：移动用户；1：互联网用户
     * 表字段 : users.type
     */
    private Integer type;

    /**
     * 登录凭证
     * 表字段 : users.token
     */
    private String token;

    /**
     * 注册渠道
     * 表字段 : users.channel
     */
    private Integer channel;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:users.id
     *
     * @return users.id, 
     */
    public String getId() {
        return id;
    }

    /**
     * 设置  字段:users.id
     *
     * @param id the value for users.id, 
     */
    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    /**
     * 获取 登陆账号 字段:users.login_account
     *
     * @return users.login_account, 登陆账号
     */
    public String getLoginAccount() {
        return loginAccount;
    }

    /**
     * 设置 登陆账号 字段:users.login_account
     *
     * @param loginAccount the value for users.login_account, 登陆账号
     */
    public void setLoginAccount(String loginAccount) {
        this.loginAccount = loginAccount == null ? null : loginAccount.trim();
    }

    /**
     * 获取 登录密码 字段:users.login_psw
     *
     * @return users.login_psw, 登录密码
     */
    public String getLoginPsw() {
        return loginPsw;
    }

    /**
     * 设置 登录密码 字段:users.login_psw
     *
     * @param loginPsw the value for users.login_psw, 登录密码
     */
    public void setLoginPsw(String loginPsw) {
        this.loginPsw = loginPsw == null ? null : loginPsw.trim();
    }

    /**
     * 获取 绑定手机(可用于登录) 字段:users.telephone
     *
     * @return users.telephone, 绑定手机(可用于登录)
     */
    public String getTelephone() {
        return telephone;
    }

    /**
     * 设置 绑定手机(可用于登录) 字段:users.telephone
     *
     * @param telephone the value for users.telephone, 绑定手机(可用于登录)
     */
    public void setTelephone(String telephone) {
        this.telephone = telephone == null ? null : telephone.trim();
    }

    /**
     * 获取 最后一次登录时间 字段:users.last_login
     *
     * @return users.last_login, 最后一次登录时间
     */
    public Date getLastLogin() {
        return lastLogin;
    }

    /**
     * 设置 最后一次登录时间 字段:users.last_login
     *
     * @param lastLogin the value for users.last_login, 最后一次登录时间
     */
    public void setLastLogin(Date lastLogin) {
        this.lastLogin = lastLogin;
    }

    /**
     * 获取 0：移动用户；1：互联网用户 字段:users.type
     *
     * @return users.type, 0：移动用户；1：互联网用户
     */
    public Integer getType() {
        return type;
    }

    /**
     * 设置 0：移动用户；1：互联网用户 字段:users.type
     *
     * @param type the value for users.type, 0：移动用户；1：互联网用户
     */
    public void setType(Integer type) {
        this.type = type;
    }

    /**
     * 获取 登录凭证 字段:users.token
     *
     * @return users.token, 登录凭证
     */
    public String getToken() {
        return token;
    }

    /**
     * 设置 登录凭证 字段:users.token
     *
     * @param token the value for users.token, 登录凭证
     */
    public void setToken(String token) {
        this.token = token == null ? null : token.trim();
    }

    /**
     * 获取 注册渠道 字段:users.channel
     *
     * @return users.channel, 注册渠道
     */
    public Integer getChannel() {
        return channel;
    }

    /**
     * 设置 注册渠道 字段:users.channel
     *
     * @param channel the value for users.channel, 注册渠道
     */
    public void setChannel(Integer channel) {
        this.channel = channel;
    }

    /**
     * ,users
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", loginAccount=").append(loginAccount);
        sb.append(", loginPsw=").append(loginPsw);
        sb.append(", telephone=").append(telephone);
        sb.append(", lastLogin=").append(lastLogin);
        sb.append(", type=").append(type);
        sb.append(", token=").append(token);
        sb.append(", channel=").append(channel);
        sb.append("]");
        return sb.toString();
    }
}