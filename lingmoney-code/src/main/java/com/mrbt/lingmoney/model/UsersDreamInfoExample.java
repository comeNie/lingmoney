package com.mrbt.lingmoney.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UsersDreamInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users_dream_info
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users_dream_info
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users_dream_info
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users_dream_info
     *
     * @mbg.generated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users_dream_info
     *
     * @mbg.generated
     */
    protected int limitEnd = -1;

    /**
     *  构造查询条件,users_dream_info
     */
    public UsersDreamInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *  设置排序字段,users_dream_info
     *
     * @param orderByClause 排序字段
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *  获取排序字段,users_dream_info
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *  设置过滤重复数据,users_dream_info
     *
     * @param distinct 是否过滤重复数据
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *  是否过滤重复数据,users_dream_info
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *  获取当前的查询条件实例,users_dream_info
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * ,users_dream_info
     *
     * @param criteria 过滤条件实例
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * ,users_dream_info
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *  创建一个查询条件,users_dream_info
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *  内部构建查询条件对象,users_dream_info
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *  清除查询条件,users_dream_info
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * ,users_dream_info
     *
     * @param limitStart
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * ,users_dream_info
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * ,users_dream_info
     *
     * @param limitEnd
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * ,users_dream_info
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * 类注释
     * GeneratedCriteria
     * 数据库表：users_dream_info
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUIdIsNull() {
            addCriterion("u_id is null");
            return (Criteria) this;
        }

        public Criteria andUIdIsNotNull() {
            addCriterion("u_id is not null");
            return (Criteria) this;
        }

        public Criteria andUIdEqualTo(String value) {
            addCriterion("u_id =", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotEqualTo(String value) {
            addCriterion("u_id <>", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdGreaterThan(String value) {
            addCriterion("u_id >", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdGreaterThanOrEqualTo(String value) {
            addCriterion("u_id >=", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdLessThan(String value) {
            addCriterion("u_id <", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdLessThanOrEqualTo(String value) {
            addCriterion("u_id <=", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdLike(String value) {
            addCriterion("u_id like", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotLike(String value) {
            addCriterion("u_id not like", value, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdIn(List<String> values) {
            addCriterion("u_id in", values, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotIn(List<String> values) {
            addCriterion("u_id not in", values, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdBetween(String value1, String value2) {
            addCriterion("u_id between", value1, value2, "uId");
            return (Criteria) this;
        }

        public Criteria andUIdNotBetween(String value1, String value2) {
            addCriterion("u_id not between", value1, value2, "uId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdIsNull() {
            addCriterion("dream_info_id is null");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdIsNotNull() {
            addCriterion("dream_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdEqualTo(Integer value) {
            addCriterion("dream_info_id =", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdNotEqualTo(Integer value) {
            addCriterion("dream_info_id <>", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdGreaterThan(Integer value) {
            addCriterion("dream_info_id >", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dream_info_id >=", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdLessThan(Integer value) {
            addCriterion("dream_info_id <", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("dream_info_id <=", value, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdIn(List<Integer> values) {
            addCriterion("dream_info_id in", values, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdNotIn(List<Integer> values) {
            addCriterion("dream_info_id not in", values, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("dream_info_id between", value1, value2, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dream_info_id not between", value1, value2, "dreamInfoId");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeIsNull() {
            addCriterion("dream_start_time is null");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeIsNotNull() {
            addCriterion("dream_start_time is not null");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeEqualTo(Date value) {
            addCriterion("dream_start_time =", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeNotEqualTo(Date value) {
            addCriterion("dream_start_time <>", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeGreaterThan(Date value) {
            addCriterion("dream_start_time >", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("dream_start_time >=", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeLessThan(Date value) {
            addCriterion("dream_start_time <", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeLessThanOrEqualTo(Date value) {
            addCriterion("dream_start_time <=", value, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeIn(List<Date> values) {
            addCriterion("dream_start_time in", values, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeNotIn(List<Date> values) {
            addCriterion("dream_start_time not in", values, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeBetween(Date value1, Date value2) {
            addCriterion("dream_start_time between", value1, value2, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamStartTimeNotBetween(Date value1, Date value2) {
            addCriterion("dream_start_time not between", value1, value2, "dreamStartTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeIsNull() {
            addCriterion("dream_end_time is null");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeIsNotNull() {
            addCriterion("dream_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeEqualTo(Date value) {
            addCriterion("dream_end_time =", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeNotEqualTo(Date value) {
            addCriterion("dream_end_time <>", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeGreaterThan(Date value) {
            addCriterion("dream_end_time >", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("dream_end_time >=", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeLessThan(Date value) {
            addCriterion("dream_end_time <", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("dream_end_time <=", value, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeIn(List<Date> values) {
            addCriterion("dream_end_time in", values, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeNotIn(List<Date> values) {
            addCriterion("dream_end_time not in", values, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeBetween(Date value1, Date value2) {
            addCriterion("dream_end_time between", value1, value2, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andDreamEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("dream_end_time not between", value1, value2, "dreamEndTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeIsNull() {
            addCriterion("accumulated_income is null");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeIsNotNull() {
            addCriterion("accumulated_income is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeEqualTo(Double value) {
            addCriterion("accumulated_income =", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeNotEqualTo(Double value) {
            addCriterion("accumulated_income <>", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeGreaterThan(Double value) {
            addCriterion("accumulated_income >", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeGreaterThanOrEqualTo(Double value) {
            addCriterion("accumulated_income >=", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeLessThan(Double value) {
            addCriterion("accumulated_income <", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeLessThanOrEqualTo(Double value) {
            addCriterion("accumulated_income <=", value, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeIn(List<Double> values) {
            addCriterion("accumulated_income in", values, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeNotIn(List<Double> values) {
            addCriterion("accumulated_income not in", values, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeBetween(Double value1, Double value2) {
            addCriterion("accumulated_income between", value1, value2, "accumulatedIncome");
            return (Criteria) this;
        }

        public Criteria andAccumulatedIncomeNotBetween(Double value1, Double value2) {
            addCriterion("accumulated_income not between", value1, value2, "accumulatedIncome");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：users_dream_info
     *
     * @mbg.generated
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * 类注释
     * Criterion
     * 数据库表：users_dream_info
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}