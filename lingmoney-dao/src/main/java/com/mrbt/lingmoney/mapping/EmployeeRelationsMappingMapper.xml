<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mrbt.lingmoney.mapper.EmployeeRelationsMappingMapper" >
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.EmployeeRelationsMapping" >
    <!--
    @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="comp_name" property="compName" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employeeID" property="employeeid" jdbcType="VARCHAR" />
    <result column="newID" property="newid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
    @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
    @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
    @mbggenerated
    -->
    id, type, comp_name, department, employee_name, employeeID, newID, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMappingExample" >
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_relations_mapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from employee_relations_mapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
    @mbggenerated
    -->
    delete from employee_relations_mapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMappingExample" >
    <!--
    @mbggenerated
    -->
    delete from employee_relations_mapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMapping" >
    <!--
    @mbggenerated
    -->
    insert into employee_relations_mapping (id, type, comp_name, 
      department, employee_name, employeeID, 
      newID, status)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{compName,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, #{employeeid,jdbcType=VARCHAR}, 
      #{newid,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMapping" >
    <!--
    @mbggenerated
    -->
    insert into employee_relations_mapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="compName != null" >
        comp_name,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="employeeid != null" >
        employeeID,
      </if>
      <if test="newid != null" >
        newID,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="compName != null" >
        #{compName,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="newid != null" >
        #{newid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMappingExample" resultType="java.lang.Long" >
    <!--
    @mbggenerated
    -->
    select count(*) from employee_relations_mapping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
    @mbggenerated
    -->
    update employee_relations_mapping
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.compName != null" >
        comp_name = #{record.compName,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null" >
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null" >
        employeeID = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.newid != null" >
        newID = #{record.newid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
    @mbggenerated
    -->
    update employee_relations_mapping
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      comp_name = #{record.compName,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      employeeID = #{record.employeeid,jdbcType=VARCHAR},
      newID = #{record.newid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMapping" >
    <!--
    @mbggenerated
    -->
    update employee_relations_mapping
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="compName != null" >
        comp_name = #{compName,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        employeeID = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="newid != null" >
        newID = #{newid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.EmployeeRelationsMapping" >
    <!--
    @mbggenerated
    -->
    update employee_relations_mapping
    set type = #{type,jdbcType=INTEGER},
      comp_name = #{compName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employeeID = #{employeeid,jdbcType=VARCHAR},
      newID = #{newid,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectReferee" resultType="com.mrbt.lingmoney.model.EmployeeRelationsMapping">
		SELECT erm.*
		FROM employee_relations_mapping erm 
		LEFT JOIN users_employess_relation uer ON uer.`employess_id` = erm.`id`
		WHERE (
				SELECT up.referral_id 
				FROM users_properties up
				LEFT JOIN hx_account ha ON up.u_id = ha.u_id
				WHERE ha.ac_no = #{acNo} AND ha.ac_name = #{acName}
      		  ) = usp.referral_code
      		  AND erm.status = 1
	</select>
</mapper>