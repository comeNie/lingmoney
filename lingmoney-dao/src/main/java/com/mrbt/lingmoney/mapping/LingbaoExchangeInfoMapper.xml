<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.LingbaoExchangeInfoMapper">
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.LingbaoExchangeInfo">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="VARCHAR" property="uId" />
    <result column="gift_id" jdbcType="INTEGER" property="giftId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="express_number" jdbcType="VARCHAR" property="expressNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="exchange_time" jdbcType="TIMESTAMP" property="exchangeTime" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="express_company" jdbcType="VARCHAR" property="expressCompany" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, u_id, gift_id, name, num, integral, activity_id, address_id, serial_number, express_number, 
    status, exchange_time, send_time, receive_time, type, express_company
  </sql>
  <select id="selectByExample" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfoExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lingbao_exchange_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from lingbao_exchange_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from lingbao_exchange_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfoExample">
    <!--
    @mbggenerated
    -->
    delete from lingbao_exchange_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfo">
    <!--
    @mbggenerated
    -->
    insert into lingbao_exchange_info (id, u_id, gift_id, 
      name, num, integral, 
      activity_id, address_id, serial_number, 
      express_number, status, exchange_time, 
      send_time, receive_time, type, 
      express_company)
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR}, #{giftId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, 
      #{activityId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, #{serialNumber,jdbcType=VARCHAR}, 
      #{expressNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{exchangeTime,jdbcType=TIMESTAMP}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{receiveTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{expressCompany,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfo">
    <!--
    @mbggenerated
    -->
    insert into lingbao_exchange_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="giftId != null">
        gift_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="expressNumber != null">
        express_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="exchangeTime != null">
        exchange_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="receiveTime != null">
        receive_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="expressCompany != null">
        express_company,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null">
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressNumber != null">
        #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="exchangeTime != null">
        #{exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="expressCompany != null">
        #{expressCompany,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfoExample" resultType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    select count(*) from lingbao_exchange_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update lingbao_exchange_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=VARCHAR},
      </if>
      <if test="record.giftId != null">
        gift_id = #{record.giftId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.expressNumber != null">
        express_number = #{record.expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeTime != null">
        exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveTime != null">
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.expressCompany != null">
        express_company = #{record.expressCompany,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update lingbao_exchange_info
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=VARCHAR},
      gift_id = #{record.giftId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      express_number = #{record.expressNumber,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      exchange_time = #{record.exchangeTime,jdbcType=TIMESTAMP},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      express_company = #{record.expressCompany,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfo">
    <!--
    @mbggenerated
    -->
    update lingbao_exchange_info
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null">
        gift_id = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="expressNumber != null">
        express_number = #{expressNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="exchangeTime != null">
        exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="expressCompany != null">
        express_company = #{expressCompany,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.LingbaoExchangeInfo">
    <!--
    @mbggenerated
    -->
    update lingbao_exchange_info
    set u_id = #{uId,jdbcType=VARCHAR},
      gift_id = #{giftId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      express_number = #{expressNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      exchange_time = #{exchangeTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      express_company = #{expressCompany,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- custom setting -->
  <select id="queryLotteryInfo" resultType="java.util.Map">
  	select 
  		concat(substring(u.login_account,1,7),'***') account, ifnull(up.picture,'/resource/images/img_memberTouxiang.gif') pic, 
  		lei.name giftname,date_format(lei.exchange_time,'%Y-%m-%d') dates 
  	from 
  		lingbao_exchange_info lei ,users_properties up, users u  
  	where 
  		lei.u_id = up.u_id and u.id = lei.u_id and lei.type = 1 
  	order by 
  		lei.exchange_time desc
  	limit 0,50
  </select>
  
   <select id="queryLotteryByUid" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(1) from lingbao_exchange_info where u_id = #{0, jdbcType=VARCHAR} and type = 1
  </select>
  
  <select id="queryBySerialNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select  
  	<include refid="Base_Column_List" />
    from 
    lingbao_exchange_info 
    where 
    serial_number = #{serialNumber,jdbcType=VARCHAR}
  </select>
  
  <select id="queryExchangeInfoViewList" parameterType="java.util.Map" resultType="java.util.Map">
  	select 
  		lei.id, lei.gift_id giftId, lei.name, lei.num, lei.integral, ifnull(lei.express_number,'') expressNumber, 
    lei.status, date_format(lei.exchange_time,'%Y-%m-%d') exchangeTime,date_format(lei.receive_time,'%Y-%m-%d') receiveTime, date_format(lei.send_time,'%Y-%m-%d %H:%i:%s') sendTime, 
	 date_format(lei.receive_time,'%Y-%m-%d') receiveTime, ifnull(lei.express_company,'') expressCompany, lg.picture_small pic ,
	 lei.serial_number serialNumber, lg.apply_type applyType 
    from 
    	lingbao_exchange_info lei
    left join 
    	lingbao_gift lg 
    on 
    	lei.gift_id = lg.id  
    where 1 = 1 
    <if test="status != null">
    	<choose>
	    	<when test="status == 10">
	    		and lei.status in (1, 0) 
	    	</when>
	    	<otherwise>
	    		and lei.status = #{status,jdbcType=INTEGER}
	    	</otherwise>
	    </choose>
    </if>
    <if test="uid != null">
    	and lei.u_id = #{uid} 
    </if>
    order by 
    	id desc
    <if test="start!=null">
    limit #{start},#{number} 
    </if>
  </select>
  
  <select id="countExchangeInfoViewList" parameterType="java.util.Map" resultType="java.lang.Integer">
  	select 
  		count(1) 
    from 
    	lingbao_exchange_info
    where 1 = 1 
    <choose>
    	<when test="status == 10">
    		and status in (1, 0) 
    	</when>
    	<otherwise>
    		and status = #{status,jdbcType=INTEGER}
    	</otherwise>
    </choose>
    <if test="uid != null">
    	and u_id = #{uid} 
    </if>
  </select>
  
  <select id="findLingbaoExchangeInfoCondition" parameterType="com.mrbt.lingmoney.utils.PageInfo"
		resultType="com.mrbt.lingmoney.model.LingbaoExchangeInfoVo">
		select lei.id,up.name uname,u.telephone uPhoneNumber,lg.name
		giftName,lei.u_id as uId,lei.num,lei.integral,lg.type as
		gifttype,lei.gift_id as giftId,
		llt.name activityName,lei.serial_number
		serialNumber,lei.express_company
		expressCompany,
		lei.express_number
		expressNumber,lei.status,lei.type,lei.address_id
		addressId,lei.exchange_time exchangeTime,lei.send_time
		sendTime,lei.receive_time receiveTime, lg.receive_way receiveWay
		from lingbao_exchange_info lei
		inner join users_properties up on lei.u_id = up.u_id
		inner join users u
		on lei.u_id = u.id
		left join lingbao_gift lg on lei.gift_id = lg.id
		left join lingbao_lottery_type llt on lei.activity_id = llt.id
		<where>
			<if test=" condition.uname != null and condition.uname != '' ">
				and up.name like concat('%',#{condition.uname},'%')
			</if>
			<if
				test=" condition.uPhoneNumber != null and condition.uPhoneNumber != '' ">
				and u.telephone = #{condition.uPhoneNumber}
			</if>
			<if test=" condition.giftName != null and condition.giftName != '' ">
				and lg.name like concat('%',#{condition.giftName},'%')
			</if>
			<if test=" condition.status != null">
				and lei.status = #{condition.status}
			</if>
			<if test=" condition.type != null">
				and lei.type = #{condition.type}
			</if>
			<if test=" condition.receiveWay != null">
				and lg.receive_way = #{condition.receiveWay}
			</if>
			<if test=" condition.activityId != null">
				and lei.activity_id = #{condition.activityId}
			</if>
			<if
				test=" condition.serialNumber != null and condition.serialNumber != ''">
				and lei.serial_number = #{condition.serialNumber}
			</if>
			<if
				test=" condition.expressNumber != null and condition.expressNumber != ''">
				and lei.express_number = #{condition.expressNumber}
			</if>
			<if
				test=" condition.expressCompany != null and condition.expressCompany != ''">
				and lei.express_company = #{condition.expressCompany}
			</if>
			<if test=" condition.gifttype != null">
				and lg.type = #{condition.gifttype}
			</if>
			and lei.status != 3
		</where>
		 order by lei.exchange_time desc 
		<if test="from !=0 or size!=0">
			limit #{from},#{size}
		</if>
	</select>
	<select id="findLingbaoExchangeInfoCount" parameterType="com.mrbt.lingmoney.utils.PageInfo"
		resultType="java.lang.Integer">
		select count(lei.id)
		from lingbao_exchange_info lei
		inner join users_properties up on lei.u_id = up.u_id
		inner join users u
		on lei.u_id = u.id
		left join lingbao_gift lg on lei.gift_id = lg.id
		left join lingbao_lottery_type llt on lei.activity_id = llt.id
		<where>
			<if test=" condition.uname != null and condition.uname != '' ">
				and up.name like concat('%',#{condition.uname},'%')
			</if>
			<if
				test=" condition.uPhoneNumber != null and condition.uPhoneNumber != '' ">
				and u.telephone = #{condition.uPhoneNumber}
			</if>
			<if test=" condition.giftName != null and condition.giftName != '' ">
				and lg.name like concat('%',#{condition.giftName},'%')
			</if>
			<if test=" condition.status != null">
				and lei.status = #{condition.status}
			</if>
			<if test=" condition.type != null">
				and lei.type = #{condition.type}
			</if>
			<if test=" condition.activityId != null">
				and lei.activity_id = #{condition.activityId}
			</if>
			<if
				test=" condition.serialNumber != null and condition.serialNumber != ''">
				and lei.serial_number = #{condition.serialNumber}
			</if>
			<if
				test=" condition.expressNumber != null and condition.expressNumber != ''">
				and lei.express_number = #{condition.expressNumber}
			</if>
			<if
				test=" condition.expressCompany != null and condition.expressCompany != ''">
				and lei.express_company = #{condition.expressCompany}
			</if>
			<if test=" condition.gifttype != null">
				and lg.type = #{condition.gifttype}
			</if>
			and lei.status != 3
		</where>

	</select>
</mapper>