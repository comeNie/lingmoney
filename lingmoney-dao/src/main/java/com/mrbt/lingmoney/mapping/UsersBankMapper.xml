<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.UsersBankMapper">
	<resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.UsersBank">
		<!-- @mbggenerated -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="u_id" jdbcType="VARCHAR" property="uId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="number" jdbcType="VARCHAR" property="number" />
		<result column="province" jdbcType="VARCHAR" property="province" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="town" jdbcType="VARCHAR" property="town" />
		<result column="bank" jdbcType="VARCHAR" property="bank" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="bankcode" jdbcType="VARCHAR" property="bankcode" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="isdefault" jdbcType="VARCHAR" property="isdefault" />
		<result column="bindtime" jdbcType="TIMESTAMP" property="bindtime" />
		<result column="platform_type" jdbcType="INTEGER" property="platformType" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="user_tel" jdbcType="VARCHAR" property="userTel" />
		<result column="bank_short" jdbcType="VARCHAR" property="bankShort" />
		<result column="bank_logo" jdbcType="VARCHAR" property="bankLogo" />
		<result column="upper_limit" jdbcType="VARCHAR" property="upperLimit" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- @mbggenerated -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- @mbggenerated -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- @mbggenerated -->
		id, u_id, name, number, province, city, town, bank, tel, bankcode,
		status, isdefault,
		bindtime, platform_type
	</sql>
	<select id="selectByExample" parameterType="com.mrbt.lingmoney.model.UsersBankExample"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from users_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart >= 0">
			limit ${limitStart} , ${limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<include refid="Base_Column_List" />
		from users_bank
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- @mbggenerated -->
		delete from users_bank
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.UsersBankExample">
		<!-- @mbggenerated -->
		delete from users_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.mrbt.lingmoney.model.UsersBank">
		<!-- @mbggenerated -->
		insert into users_bank (id, u_id, name,
		number, province, city,
		town, bank, tel, bankcode,
		status, isdefault, bindtime,
		platform_type)
		values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{number,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
		#{town,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR},
		#{tel,jdbcType=VARCHAR}, #{bankcode,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{isdefault,jdbcType=VARCHAR},
		#{bindtime,jdbcType=TIMESTAMP},
		#{platformType,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.UsersBank">
		<!-- @mbggenerated -->
		insert into users_bank
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uId != null">
				u_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="number != null">
				number,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="town != null">
				town,
			</if>
			<if test="bank != null">
				bank,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="bankcode != null">
				bankcode,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="isdefault != null">
				isdefault,
			</if>
			<if test="bindtime != null">
				bindtime,
			</if>
			<if test="platformType != null">
				platform_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uId != null">
				#{uId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="number != null">
				#{number,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="town != null">
				#{town,jdbcType=VARCHAR},
			</if>
			<if test="bank != null">
				#{bank,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="bankcode != null">
				#{bankcode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="isdefault != null">
				#{isdefault,jdbcType=VARCHAR},
			</if>
			<if test="bindtime != null">
				#{bindtime,jdbcType=TIMESTAMP},
			</if>
			<if test="platformType != null">
				#{platformType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.mrbt.lingmoney.model.UsersBankExample"
		resultType="java.lang.Long">
		<!-- @mbggenerated -->
		select count(*) from users_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- @mbggenerated -->
		update users_bank
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.uId != null">
				u_id = #{record.uId,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.number != null">
				number = #{record.number,jdbcType=VARCHAR},
			</if>
			<if test="record.province != null">
				province = #{record.province,jdbcType=VARCHAR},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
			<if test="record.town != null">
				town = #{record.town,jdbcType=VARCHAR},
			</if>
			<if test="record.bank != null">
				bank = #{record.bank,jdbcType=VARCHAR},
			</if>
			<if test="record.tel != null">
				tel = #{record.tel,jdbcType=VARCHAR},
			</if>
			<if test="record.bankcode != null">
				bankcode = #{record.bankcode,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.isdefault != null">
				isdefault = #{record.isdefault,jdbcType=VARCHAR},
			</if>
			<if test="record.bindtime != null">
				bindtime = #{record.bindtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.platformType != null">
				platform_type = #{record.platformType,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- @mbggenerated -->
		update users_bank
		set id = #{record.id,jdbcType=INTEGER},
		u_id = #{record.uId,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		number = #{record.number,jdbcType=VARCHAR},
		province = #{record.province,jdbcType=VARCHAR},
		city = #{record.city,jdbcType=VARCHAR},
		town = #{record.town,jdbcType=VARCHAR},
		bank = #{record.bank,jdbcType=VARCHAR},
		tel = #{record.tel,jdbcType=VARCHAR},
		bankcode = #{record.bankcode,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=VARCHAR},
		isdefault = #{record.isdefault,jdbcType=VARCHAR},
		bindtime = #{record.bindtime,jdbcType=TIMESTAMP},
		platform_type = #{record.platformType,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.UsersBank">
		<!-- @mbggenerated -->
		update users_bank
		<set>
			<if test="uId != null">
				u_id = #{uId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="number != null">
				number = #{number,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="town != null">
				town = #{town,jdbcType=VARCHAR},
			</if>
			<if test="bank != null">
				bank = #{bank,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="bankcode != null">
				bankcode = #{bankcode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="isdefault != null">
				isdefault = #{isdefault,jdbcType=VARCHAR},
			</if>
			<if test="bindtime != null">
				bindtime = #{bindtime,jdbcType=TIMESTAMP},
			</if>
			<if test="platformType != null">
				platform_type = #{platformType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.UsersBank">
		<!-- @mbggenerated -->
		update users_bank
		set u_id = #{uId,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		number = #{number,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		town = #{town,jdbcType=VARCHAR},
		bank = #{bank,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		bankcode = #{bankcode,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		isdefault = #{isdefault,jdbcType=VARCHAR},
		bindtime = #{bindtime,jdbcType=TIMESTAMP},
		platform_type = #{platformType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- custom setting -->
	<select id="selectByUIdAndStatus" parameterType="java.lang.String"
		resultType="com.mrbt.lingmoney.model.trading.BankInfo">
		select
		<include refid="Base_Column_List" />
		from
		users_bank
		where u_id = #{0,jdbcType=VARCHAR} and status = #{1,jdbcType=VARCHAR} order
		by isdefault desc,bindtime desc
	</select>

	<!-- 查询某用户的银行卡属性 -->
	<select id="queryUserBankPurchaseInfo" parameterType="java.lang.String"
		resultType="java.util.Map">
		select
		ub.id id, ub.name name, ub.number number, ub.tel tel, ub.isdefault
		isdefault,
		sb.bank_short bankShort, sb.bank_logo bankLogo, sb.upper_limit upperLimit
		from users_bank ub, support_bank sb
		where u_id = #{0,jdbcType=INTEGER} and ub.bankcode = sb.bank_code and
		ub.status = 1
	</select>

	<select id="queryByCondition" resultMap="BaseResultMap"
		parameterType="com.mrbt.lingmoney.utils.PageInfo">
		select u.telephone as user_tel, up.name as user_name, ub.* from users
		u,
		users_bank ub, users_properties up
		where u.id = ub.u_id and u.id = up.u_id and
		ub.number not like '%*%'
		<if test="condition.userTel != null and condition.userTel != ''">
			and u.telephone = #{condition.userTel}
		</if>
		<if test="condition.userName != null and condition.userName != ''">
			and up.name = #{condition.userName}
		</if>
		<if test="from !=0 or size!=0">
			limit #{from},#{size}
		</if>
	</select>
	<select id="queryCountByCondition" resultType="java.lang.Integer"
		parameterType="com.mrbt.lingmoney.utils.PageInfo">
		select count(u.id) from users u,
		users_bank ub, users_properties up
		where u.id = ub.u_id and u.id = up.u_id and
		ub.number not like '%*%'
		<if test="condition.userTel != null and condition.userTel != ''">
			and u.telephone = #{condition.userTel}
		</if>
		<if test="condition.userName != null and condition.userName != ''">
			and up.name = #{condition.userName}
		</if>
	</select>
	
	<select id="listJDBankCardView" resultType="java.util.Map" parameterType="java.lang.String">
		select 
			ub.id id, ub.name, right(ub.number, 4) tailNum,ub.isdefault isDefault, 
			sb.bank_short bankShort, sb.bank_logo bankLogo, sb.color_value color,
			'#E60021' defaultColor, sb.background background, sb.upper_limit upperLimit, ub.tel tel
		from 
			users_bank ub 
		left join 
			support_bank sb 
		on 
			ub.bankcode = sb.bank_code 
		where 
			ub.u_id = #{0, jdbcType=VARCHAR} and ub.`status` = '1'
	</select>
	
	<select id="selectByUIdAndStatus2" parameterType="com.mrbt.lingmoney.model.UsersBank" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users_bank
		where u_id = #{uId,jdbcType=VARCHAR} and status =
		#{1,jdbcType=VARCHAR} order by isdefault desc
	</select>
	
	<select id="selectByUIdAndDefault" parameterType="com.mrbt.lingmoney.model.UsersBank" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users_bank
		where u_id = #{uId,jdbcType=VARCHAR} and status =
		#{1,jdbcType=VARCHAR} and isdefault = #{2,jdbcType=VARCHAR}
	</select>
	
	<!-- 新增方法 -->
	<select id="selectByUId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		<!-- 查询某用户的银行卡属性 -->
		select
		ub.id, ub.u_id, ub.name, ub.number, ub.province, ub.city, ub.town, ub.bank, ub.tel, ub.bankcode, ub.isdefault, sb.bank_short, sb.bank_logo, sb.upper_limit
		from users_bank ub, support_bank sb
		where u_id = #{uId,jdbcType=INTEGER} and ub.bankcode = sb.bank_code and ub.status = 1
	</select>
	
	<!-- 新增方法 -->
	<select id="findByUserBankId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- 查询某用户的银行卡属性 -->
		select
		ub.id, ub.u_id, ub.name, ub.number, ub.province, ub.city, ub.town, ub.bank, ub.tel, ub.bankcode, ub.isdefault, sb.bank_short, sb.bank_logo, sb.upper_limit
		from users_bank ub, support_bank sb
		where ub.id = #{parseInt,jdbcType=INTEGER} and ub.bankcode = sb.bank_code and ub.status = 1
	</select>
</mapper>