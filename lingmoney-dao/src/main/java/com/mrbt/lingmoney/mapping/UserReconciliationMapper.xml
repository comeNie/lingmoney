<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.UserReconciliationMapper">
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.UserReconciliation">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="VARCHAR" property="uId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="p_frozen_money" jdbcType="DECIMAL" property="pFrozenMoney" />
    <result column="y_frozen_money" jdbcType="DECIMAL" property="yFrozenMoney" />
    <result column="p_balance" jdbcType="DECIMAL" property="pBalance" />
    <result column="y_balance" jdbcType="DECIMAL" property="yBalance" />
    <result column="recon_date" jdbcType="DATE" property="reconDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, u_id, status, p_frozen_money, y_frozen_money, p_balance, y_balance, recon_date
  </sql>
  <select id="selectByExample" parameterType="com.mrbt.lingmoney.model.UserReconciliationExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_reconciliation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from user_reconciliation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from user_reconciliation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.UserReconciliationExample">
    <!--
    @mbggenerated
    -->
    delete from user_reconciliation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.UserReconciliation">
    <!--
    @mbggenerated
    -->
    insert into user_reconciliation (id, u_id, status, 
      p_frozen_money, y_frozen_money, p_balance, 
      y_balance, recon_date)
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{pFrozenMoney,jdbcType=DECIMAL}, #{yFrozenMoney,jdbcType=DECIMAL}, #{pBalance,jdbcType=DECIMAL}, 
      #{yBalance,jdbcType=DECIMAL}, #{reconDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.UserReconciliation">
    <!--
    @mbggenerated
    -->
    insert into user_reconciliation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="pFrozenMoney != null">
        p_frozen_money,
      </if>
      <if test="yFrozenMoney != null">
        y_frozen_money,
      </if>
      <if test="pBalance != null">
        p_balance,
      </if>
      <if test="yBalance != null">
        y_balance,
      </if>
      <if test="reconDate != null">
        recon_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="pFrozenMoney != null">
        #{pFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="yFrozenMoney != null">
        #{yFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="pBalance != null">
        #{pBalance,jdbcType=DECIMAL},
      </if>
      <if test="yBalance != null">
        #{yBalance,jdbcType=DECIMAL},
      </if>
      <if test="reconDate != null">
        #{reconDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.UserReconciliationExample" resultType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    select count(*) from user_reconciliation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update user_reconciliation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.pFrozenMoney != null">
        p_frozen_money = #{record.pFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.yFrozenMoney != null">
        y_frozen_money = #{record.yFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.pBalance != null">
        p_balance = #{record.pBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.yBalance != null">
        y_balance = #{record.yBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.reconDate != null">
        recon_date = #{record.reconDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update user_reconciliation
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      p_frozen_money = #{record.pFrozenMoney,jdbcType=DECIMAL},
      y_frozen_money = #{record.yFrozenMoney,jdbcType=DECIMAL},
      p_balance = #{record.pBalance,jdbcType=DECIMAL},
      y_balance = #{record.yBalance,jdbcType=DECIMAL},
      recon_date = #{record.reconDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.UserReconciliation">
    <!--
    @mbggenerated
    -->
    update user_reconciliation
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="pFrozenMoney != null">
        p_frozen_money = #{pFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="yFrozenMoney != null">
        y_frozen_money = #{yFrozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="pBalance != null">
        p_balance = #{pBalance,jdbcType=DECIMAL},
      </if>
      <if test="yBalance != null">
        y_balance = #{yBalance,jdbcType=DECIMAL},
      </if>
      <if test="reconDate != null">
        recon_date = #{reconDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.UserReconciliation">
    <!--
    @mbggenerated
    -->
    update user_reconciliation
    set u_id = #{uId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      p_frozen_money = #{pFrozenMoney,jdbcType=DECIMAL},
      y_frozen_money = #{yFrozenMoney,jdbcType=DECIMAL},
      p_balance = #{pBalance,jdbcType=DECIMAL},
      y_balance = #{yBalance,jdbcType=DECIMAL},
      recon_date = #{reconDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>