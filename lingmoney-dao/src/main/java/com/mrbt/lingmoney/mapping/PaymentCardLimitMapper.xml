<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.PaymentCardLimitMapper">
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.PaymentCardLimit">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="card_short" jdbcType="VARCHAR" property="cardShort" />
    <result column="limit_amount" jdbcType="DECIMAL" property="limitAmount" />
    <result column="card_name" jdbcType="VARCHAR" property="cardName" />
    <result column="reach_type" jdbcType="VARCHAR" property="reachType" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, card_short, limit_amount, card_name, reach_type, status
  </sql>
  <select id="selectByExample" parameterType="com.mrbt.lingmoney.model.PaymentCardLimitExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_card_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from payment_card_limit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from payment_card_limit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.PaymentCardLimitExample">
    <!--
    @mbggenerated
    -->
    delete from payment_card_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.PaymentCardLimit">
    <!--
    @mbggenerated
    -->
    insert into payment_card_limit (id, card_short, limit_amount, 
      card_name, reach_type, status
      )
    values (#{id,jdbcType=INTEGER}, #{cardShort,jdbcType=VARCHAR}, #{limitAmount,jdbcType=DECIMAL}, 
      #{cardName,jdbcType=VARCHAR}, #{reachType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.PaymentCardLimit">
    <!--
    @mbggenerated
    -->
    insert into payment_card_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cardShort != null">
        card_short,
      </if>
      <if test="limitAmount != null">
        limit_amount,
      </if>
      <if test="cardName != null">
        card_name,
      </if>
      <if test="reachType != null">
        reach_type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardShort != null">
        #{cardShort,jdbcType=VARCHAR},
      </if>
      <if test="limitAmount != null">
        #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardName != null">
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="reachType != null">
        #{reachType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.PaymentCardLimitExample" resultType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    select count(*) from payment_card_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update payment_card_limit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cardShort != null">
        card_short = #{record.cardShort,jdbcType=VARCHAR},
      </if>
      <if test="record.limitAmount != null">
        limit_amount = #{record.limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cardName != null">
        card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.reachType != null">
        reach_type = #{record.reachType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update payment_card_limit
    set id = #{record.id,jdbcType=INTEGER},
      card_short = #{record.cardShort,jdbcType=VARCHAR},
      limit_amount = #{record.limitAmount,jdbcType=DECIMAL},
      card_name = #{record.cardName,jdbcType=VARCHAR},
      reach_type = #{record.reachType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.PaymentCardLimit">
    <!--
    @mbggenerated
    -->
    update payment_card_limit
    <set>
      <if test="cardShort != null">
        card_short = #{cardShort,jdbcType=VARCHAR},
      </if>
      <if test="limitAmount != null">
        limit_amount = #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardName != null">
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="reachType != null">
        reach_type = #{reachType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.PaymentCardLimit">
    <!--
    @mbggenerated
    -->
    update payment_card_limit
    set card_short = #{cardShort,jdbcType=VARCHAR},
      limit_amount = #{limitAmount,jdbcType=DECIMAL},
      card_name = #{cardName,jdbcType=VARCHAR},
      reach_type = #{reachType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>