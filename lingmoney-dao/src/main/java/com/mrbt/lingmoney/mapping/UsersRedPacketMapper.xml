<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.UsersRedPacketMapper">
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.UsersRedPacket">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="VARCHAR" property="uId" />
    <result column="rp_id" jdbcType="VARCHAR" property="rpId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="actual_amount" jdbcType="DOUBLE" property="actualAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="used_time" jdbcType="TIMESTAMP" property="usedTime" />
    <result column="is_check" jdbcType="INTEGER" property="isCheck" />
    <result column="validity_time" jdbcType="TIMESTAMP" property="validityTime" />
    <result column="cash_status" jdbcType="INTEGER" property="cashStatus" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="log_group" jdbcType="VARCHAR" property="logGroup" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, u_id, rp_id, status, t_id, actual_amount, create_time, used_time, is_check, validity_time, cash_status, number, log_group
  </sql>
  <select id="selectByExample" parameterType="com.mrbt.lingmoney.model.UsersRedPacketExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users_red_packet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from users_red_packet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from users_red_packet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.UsersRedPacketExample">
    <!--
    @mbggenerated
    -->
    delete from users_red_packet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.UsersRedPacket">
    <!--
    @mbggenerated
    -->
    insert into users_red_packet (id, u_id, rp_id, 
      status, t_id, actual_amount, 
      create_time, used_time, is_check, 
      validity_time, cash_status, number, log_group)
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR}, #{rpId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{actualAmount,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{usedTime,jdbcType=TIMESTAMP}, #{isCheck,jdbcType=INTEGER}, 
      #{validityTime,jdbcType=TIMESTAMP}, #{cashStatus,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{logGroup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.UsersRedPacket">
    <!--
    @mbggenerated
    -->
    insert into users_red_packet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="rpId != null">
        rp_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="tId != null">
        t_id,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="usedTime != null">
        used_time,
      </if>
      <if test="isCheck != null">
        is_check,
      </if>
      <if test="validityTime != null">
        validity_time,
      </if>
      <if test="cashStatus != null">
        cash_status,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="logGroup != null">
        log_group,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="rpId != null">
        #{rpId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null">
        #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCheck != null">
        #{isCheck,jdbcType=INTEGER},
      </if>
      <if test="validityTime != null">
        #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashStatus != null">
        #{cashStatus,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="logGroup != null">
        #{logGroup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.UsersRedPacketExample" resultType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    select count(*) from users_red_packet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update users_red_packet
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=VARCHAR},
      </if>
      <if test="record.rpId != null">
        rp_id = #{record.rpId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usedTime != null">
        used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isCheck != null">
        is_check = #{record.isCheck,jdbcType=INTEGER},
      </if>
      <if test="record.validityTime != null">
        validity_time = #{record.validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cashStatus != null">
        cash_status = #{record.cashStatus,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.logGroup != null">
        log_group = #{record.logGroup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update users_red_packet
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=VARCHAR},
      rp_id = #{record.rpId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      t_id = #{record.tId,jdbcType=INTEGER},
      actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      is_check = #{record.isCheck,jdbcType=INTEGER},
      validity_time = #{record.validityTime,jdbcType=TIMESTAMP},
      cash_status = #{record.cashStatus,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      log_group = #{record.logGroup,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.UsersRedPacket">
    <!--
    @mbggenerated
    -->
    update users_red_packet
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="rpId != null">
        rp_id = #{rpId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null">
        used_time = #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCheck != null">
        is_check = #{isCheck,jdbcType=INTEGER},
      </if>
      <if test="validityTime != null">
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashStatus != null">
        cash_status = #{cashStatus,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="logGroup != null">
        log_group = #{logGroup,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.UsersRedPacket">
    <!--
    @mbggenerated
    -->
    update users_red_packet
    set u_id = #{uId,jdbcType=VARCHAR},
      rp_id = #{rpId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      t_id = #{tId,jdbcType=INTEGER},
      actual_amount = #{actualAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      used_time = #{usedTime,jdbcType=TIMESTAMP},
      is_check = #{isCheck,jdbcType=INTEGER},
      validity_time = #{validityTime,jdbcType=TIMESTAMP},
      cash_status = #{cashStatus,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      log_group = #{logGroup,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCheckRedPacketList" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select urp.*
    from users_red_packet urp
    inner join hx_red_packet hrp on urp.rp_id = hrp.id
    where now() between hrp.a_start_time and hrp.a_end_time 
    	and hrp.status = 1 
    	and urp.is_check = 0
    	and urp.u_id = #{userId}
  </select>
  <select id="findUserIsGetRedPacket" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select urp.rp_id
    from users_red_packet urp
    inner join hx_red_packet hrp on urp.rp_id = hrp.id
    where now() between hrp.a_start_time and hrp.a_end_time 
    	and hrp.status = 1 
    	and hrp.acquis_mode = #{actType}
    	and urp.u_id = #{userId}
    	<if test="amountList != null">
    		and hrp_number in
    		<foreach collection="amountList" index="index" item="item" open="(" separator="," close=")">  
	            #{item}  
	        </foreach>
      	</if>
  </select>
  
  <select id="listRedPacketPushMessageInfo" resultType="java.util.Map">
    select sum(case when g.typename = 1 then g.num else 0 end ) ratenum,sum(case when g.typename = 2 then g.num else 0 end ) packetnum, g.days, g.umentoken, g.uid, g.deviceType from (
	    SELECT DATEDIFF(urp.validity_time, SYSDATE()) days, urp.u_id uid, up.youmeng_token umentoken, hrp.hrp_type typename, COUNT(1) num, up.device_type deviceType 
		FROM users_red_packet urp
		LEFT JOIN users_mobile_properties ump ON urp.u_id = ump.u_id
		LEFT JOIN users_properties up ON urp.u_id = up.u_id
		LEFT JOIN hx_red_packet hrp ON urp.rp_id = hrp.id
		WHERE (ump.is_use_push IS NULL OR ump.is_use_push = 1) AND (DATEDIFF(urp.validity_time, SYSDATE()) = 3 OR DATEDIFF(urp.validity_time, SYSDATE()) = 0)  AND urp.`status` = 0 AND urp.validity_time > SYSDATE() AND up.youmeng_token IS NOT NULL
		GROUP BY urp.u_id, days, hrp.hrp_type
	) g group by g.uid, g.days
  </select>
  
  <insert id="insertBatch">
    insert into users_red_packet (id, u_id, rp_id, 
      status, t_id, actual_amount, 
      create_time, used_time, is_check, 
      validity_time, cash_status, number, log_group)
    values 
    <foreach collection ="usersRedPacketList" item="usersRedPacket" separator =",">
         (#{usersRedPacket.id,jdbcType=INTEGER}, #{usersRedPacket.uId,jdbcType=VARCHAR}, #{usersRedPacket.rpId,jdbcType=VARCHAR}, 
      #{usersRedPacket.status,jdbcType=INTEGER}, #{usersRedPacket.tId,jdbcType=INTEGER}, #{usersRedPacket.actualAmount,jdbcType=DOUBLE}, 
      #{usersRedPacket.createTime,jdbcType=TIMESTAMP}, #{usersRedPacket.usedTime,jdbcType=TIMESTAMP}, #{usersRedPacket.isCheck,jdbcType=INTEGER}, 
      #{usersRedPacket.validityTime,jdbcType=TIMESTAMP}, #{usersRedPacket.cashStatus,jdbcType=INTEGER}, #{usersRedPacket.number,jdbcType=VARCHAR}, #{usersRedPacket.logGroup,jdbcType=VARCHAR})
    </foreach >
  </insert>
</mapper>