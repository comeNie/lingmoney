<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.PrefixBankMapper">
  <resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.PrefixBank">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="prefix_number" jdbcType="VARCHAR" property="prefixNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="bank_short" jdbcType="VARCHAR" property="bankShort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, name, size, prefix_number, status, bank_short
  </sql>
  <select id="selectByExample" parameterType="com.mrbt.lingmoney.model.PrefixBankExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prefix_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from prefix_bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from prefix_bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.PrefixBankExample">
    <!--
    @mbggenerated
    -->
    delete from prefix_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mrbt.lingmoney.model.PrefixBank">
    <!--
    @mbggenerated
    -->
    insert into prefix_bank (id, name, size, 
      prefix_number, status, bank_short
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, 
      #{prefixNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{bankShort,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.PrefixBank">
    <!--
    @mbggenerated
    -->
    insert into prefix_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="prefixNumber != null">
        prefix_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bankShort != null">
        bank_short,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="prefixNumber != null">
        #{prefixNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="bankShort != null">
        #{bankShort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mrbt.lingmoney.model.PrefixBankExample" resultType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    select count(*) from prefix_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update prefix_bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.prefixNumber != null">
        prefix_number = #{record.prefixNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.bankShort != null">
        bank_short = #{record.bankShort,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update prefix_bank
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=INTEGER},
      prefix_number = #{record.prefixNumber,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      bank_short = #{record.bankShort,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.PrefixBank">
    <!--
    @mbggenerated
    -->
    update prefix_bank
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="prefixNumber != null">
        prefix_number = #{prefixNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="bankShort != null">
        bank_short = #{bankShort,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.PrefixBank">
    <!--
    @mbggenerated
    -->
    update prefix_bank
    set name = #{name,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      prefix_number = #{prefixNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      bank_short = #{bankShort,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select 
  		<include refid="Base_Column_List" />
	    from prefix_bank
	    <where>
	    	and status != -1
		    <if test="name != null and name != ''">
		    	and name like concat('%',concat(#{name},'%'))
		    </if>
		    <if test="prefixNumber != null and prefixNumber != ''">
		    	and prefix_number like concat(#{prefixNumber},'%')
		    </if>
		    <if test="bankShort != null and bankShort != ''">
		    	and bank_short like concat('%',concat(#{bankShort},'%'))
		    </if>
		    <if test="status != null">
		    	and status = #{status}
		    </if>
	    </where>
  		limit #{start},#{number}; 
  </select>
  <select id="selectByConditionCount" parameterType="java.util.Map" resultType="java.lang.Integer">
  		select 
  		count(1)
	    from prefix_bank
	    <where>
	    	and status != -1
		    <if test="name != null">
		    	and name like concat('%',concat(#{name},'%'))
		    </if>
		    <if test="prefixNumber != null">
		    	and prefix_number like concat(#{prefixNumber},'%')
		    </if>
		    <if test="bankShort != null">
		    	and bank_short like concat('%',concat(#{bankShort},'%'))
		    </if>
		    <if test="status != null">
		    	and status = #{status}
		    </if>
		</where>
  </select>
</mapper>