<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrbt.lingmoney.mapper.UsersAccountMapper">
	<resultMap id="BaseResultMap" type="com.mrbt.lingmoney.model.UsersAccount">
		<!-- @mbggenerated -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="u_id" jdbcType="VARCHAR" property="uId" />
		<result column="total_asset" jdbcType="DECIMAL" property="totalAsset" />
		<result column="balance" jdbcType="DECIMAL" property="balance" />
		<result column="count_lingbao" jdbcType="INTEGER" property="countLingbao" />
		<result column="frozen_money" jdbcType="DECIMAL" property="frozenMoney" />
		<result column="total_finance" jdbcType="DECIMAL" property="totalFinance" />
		<result column="principal" jdbcType="DECIMAL" property="principal" />
		<result column="income" jdbcType="DECIMAL" property="income" />
		<result column="version" jdbcType="INTEGER" property="version" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- @mbggenerated -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- @mbggenerated -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- @mbggenerated -->
		id, u_id, total_asset, balance, count_lingbao, frozen_money,
		total_finance, principal,
		income, version
	</sql>
	<select id="selectByExample" parameterType="com.mrbt.lingmoney.model.UsersAccountExample"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from users_account
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart >= 0">
			limit ${limitStart} , ${limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<include refid="Base_Column_List" />
		from users_account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- @mbggenerated -->
		delete from users_account
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.mrbt.lingmoney.model.UsersAccountExample">
		<!-- @mbggenerated -->
		delete from users_account
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.mrbt.lingmoney.model.UsersAccount">
		<!-- @mbggenerated -->
		insert into users_account (id, u_id, total_asset,
		balance,
		count_lingbao, frozen_money,
		total_finance, principal, income,
		version)
		values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR},
		#{totalAsset,jdbcType=DECIMAL},
		#{balance,jdbcType=DECIMAL},
		#{countLingbao,jdbcType=INTEGER}, #{frozenMoney,jdbcType=DECIMAL},
		#{totalFinance,jdbcType=DECIMAL}, #{principal,jdbcType=DECIMAL},
		#{income,jdbcType=DECIMAL},
		#{version,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.mrbt.lingmoney.model.UsersAccount">
		<!-- @mbggenerated -->
		insert into users_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uId != null">
				u_id,
			</if>
			<if test="totalAsset != null">
				total_asset,
			</if>
			<if test="balance != null">
				balance,
			</if>
			<if test="countLingbao != null">
				count_lingbao,
			</if>
			<if test="frozenMoney != null">
				frozen_money,
			</if>
			<if test="totalFinance != null">
				total_finance,
			</if>
			<if test="principal != null">
				principal,
			</if>
			<if test="income != null">
				income,
			</if>
			<if test="version != null">
				version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uId != null">
				#{uId,jdbcType=VARCHAR},
			</if>
			<if test="totalAsset != null">
				#{totalAsset,jdbcType=DECIMAL},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DECIMAL},
			</if>
			<if test="countLingbao != null">
				#{countLingbao,jdbcType=INTEGER},
			</if>
			<if test="frozenMoney != null">
				#{frozenMoney,jdbcType=DECIMAL},
			</if>
			<if test="totalFinance != null">
				#{totalFinance,jdbcType=DECIMAL},
			</if>
			<if test="principal != null">
				#{principal,jdbcType=DECIMAL},
			</if>
			<if test="income != null">
				#{income,jdbcType=DECIMAL},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.mrbt.lingmoney.model.UsersAccountExample"
		resultType="java.lang.Long">
		<!-- @mbggenerated -->
		select count(*) from users_account
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- @mbggenerated -->
		update users_account
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.uId != null">
				u_id = #{record.uId,jdbcType=VARCHAR},
			</if>
			<if test="record.totalAsset != null">
				total_asset = #{record.totalAsset,jdbcType=DECIMAL},
			</if>
			<if test="record.balance != null">
				balance = #{record.balance,jdbcType=DECIMAL},
			</if>
			<if test="record.countLingbao != null">
				count_lingbao = #{record.countLingbao,jdbcType=INTEGER},
			</if>
			<if test="record.frozenMoney != null">
				frozen_money = #{record.frozenMoney,jdbcType=DECIMAL},
			</if>
			<if test="record.totalFinance != null">
				total_finance = #{record.totalFinance,jdbcType=DECIMAL},
			</if>
			<if test="record.principal != null">
				principal = #{record.principal,jdbcType=DECIMAL},
			</if>
			<if test="record.income != null">
				income = #{record.income,jdbcType=DECIMAL},
			</if>
			<if test="record.version != null">
				version = #{record.version,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- @mbggenerated -->
		update users_account
		set id = #{record.id,jdbcType=INTEGER},
		u_id =
		#{record.uId,jdbcType=VARCHAR},
		total_asset =
		#{record.totalAsset,jdbcType=DECIMAL},
		balance =
		#{record.balance,jdbcType=DECIMAL},
		count_lingbao =
		#{record.countLingbao,jdbcType=INTEGER},
		frozen_money =
		#{record.frozenMoney,jdbcType=DECIMAL},
		total_finance =
		#{record.totalFinance,jdbcType=DECIMAL},
		principal =
		#{record.principal,jdbcType=DECIMAL},
		income =
		#{record.income,jdbcType=DECIMAL},
		version =
		#{record.version,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.mrbt.lingmoney.model.UsersAccount">
		<!-- @mbggenerated -->
		update users_account
		<set>
			<if test="uId != null">
				u_id = #{uId,jdbcType=VARCHAR},
			</if>
			<if test="totalAsset != null">
				total_asset = #{totalAsset,jdbcType=DECIMAL},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=DECIMAL},
			</if>
			<if test="countLingbao != null">
				count_lingbao = #{countLingbao,jdbcType=INTEGER},
			</if>
			<if test="frozenMoney != null">
				frozen_money = #{frozenMoney,jdbcType=DECIMAL},
			</if>
			<if test="totalFinance != null">
				total_finance = #{totalFinance,jdbcType=DECIMAL},
			</if>
			<if test="principal != null">
				principal = #{principal,jdbcType=DECIMAL},
			</if>
			<if test="income != null">
				income = #{income,jdbcType=DECIMAL},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mrbt.lingmoney.model.UsersAccount">
		<!-- @mbggenerated -->
		update users_account
		set u_id = #{uId,jdbcType=VARCHAR},
		total_asset =
		#{totalAsset,jdbcType=DECIMAL},
		balance = #{balance,jdbcType=DECIMAL},
		count_lingbao = #{countLingbao,jdbcType=INTEGER},
		frozen_money =
		#{frozenMoney,jdbcType=DECIMAL},
		total_finance =
		#{totalFinance,jdbcType=DECIMAL},
		principal =
		#{principal,jdbcType=DECIMAL},
		income = #{income,jdbcType=DECIMAL},
		version = #{version,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- custom setting -->
	<select id="selectByUid" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users_account
		where u_id = #{uId,jdbcType=VARCHAR}
	</select>

	<select id="queryUsersFinancialRanking" resultType="java.util.Map">
			SELECT 
			    t.*, @rank:=@rank + 1 AS ranking
			FROM
			    (SELECT 
			        up.nick_name nickName,
			            up.picture pic,
			            ud.picture AS dPic,
			            ud.name AS dName,
			            us.telephone AS account,
			            us.id uid,
			            ua.total_finance
			    FROM
			        users_account AS ua, users_properties AS up, usres_degree AS ud, users AS us
			    WHERE
			        ua.u_id = up.u_id AND up.level = ud.id
			            AND us.id = up.u_id
			            AND us.id = ua.u_id
			    ORDER BY ua.total_finance DESC, ua.id) t,
			    (SELECT @rank:=0) B
			LIMIT 3;
	</select>
	
	<!-- 查询用户理财排名 -->
	<select id="queryUsersRanking" parameterType="java.lang.String" resultType="java.util.Map">
			select * from (SELECT 
			    t.*, @rank:=@rank + 1 AS ranking
			FROM
			    (SELECT 
			        up.nick_name nickName,
			            up.picture pic,
			            ud.picture AS dPic,
			            ud.name AS dName,
			            us.telephone AS account,
			            us.id uid,
			            ua.total_finance
			    FROM
			        users_account AS ua, users_properties AS up, usres_degree AS ud, users AS us
			    WHERE
			        ua.u_id = up.u_id AND up.level = ud.id
			            AND us.id = up.u_id
			            AND us.id = ua.u_id
			    ORDER BY ua.total_finance DESC, ua.id) t,
			    (SELECT @rank:=0) B) t where uid = #{uId,jdbcType=VARCHAR};
	</select>
	
	<!-- 关联查询 -->
	<resultMap id="PartResultMap" type="com.mrbt.lingmoney.model.UsersAccount">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="u_id" property="uId" jdbcType="INTEGER" />
		<result column="total_asset" property="totalAsset" jdbcType="DECIMAL" />
		<result column="balance" property="balance" jdbcType="DECIMAL" />
		<result column="count_lingbao" property="countLingbao"
			jdbcType="INTEGER" />
		<result column="frozen_money" property="frozenMoney" jdbcType="DECIMAL" />
		<result column="total_finance" property="totalFinance"
			jdbcType="DECIMAL" />
		<result column="principal" property="principal" jdbcType="DECIMAL" />
		<result column="income" property="income" jdbcType="DECIMAL" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="username" property="userName" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAdminMessageList" resultMap="PartResultMap"
		parameterType="com.mrbt.lingmoney.model.Condition">

		select us.telephone, up.nick_name as username,ua.* from
		users_properties as up ,users_account as ua , users as us where

		us.id =
		up.u_id and up.u_id = ua.u_id

		<if test="telephone!=null">
			and
			us.telephone=#{telephone}

		</if>

		<if test="balance!=null">
			and
			ua.balance <![CDATA[  >=  ]]>
			#{balance}

		</if>

		<if test="fincalMoney!=null">
			and
			ua.total_finance <![CDATA[  >=  ]]>
			#{fincalMoney}

		</if>


	</select>
</mapper>